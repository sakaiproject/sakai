<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="org.sakaiproject.jobscheduler.hibernate.AdditionalHibernateMappings"
          class="org.sakaiproject.springframework.orm.hibernate.impl.AdditionalHibernateMappingsImpl">
        <property name="mappingResources">
            <list>
                <value>org/sakaiproject/scheduler/events/hibernate/TriggerEventHibernateImpl.hbm.xml</value>
            </list>
        </property>
    </bean>

    <bean id="org.sakaiproject.api.app.scheduler.events.TriggerEventManager.wrapped"
          class="org.sakaiproject.component.app.scheduler.events.hibernate.TriggerEventManagerHibernateImpl">
        <property name="sessionFactory" ref="org.sakaiproject.springframework.orm.hibernate.GlobalSessionFactory"/>
    </bean>

    <bean id="org.sakaiproject.api.app.scheduler.events.TriggerEventManager"
          class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
        <property name="transactionManager">
            <ref bean="org.sakaiproject.springframework.orm.hibernate.GlobalTransactionManager"/>
        </property>
        <property name="target">
            <ref bean="org.sakaiproject.api.app.scheduler.events.TriggerEventManager.wrapped"/>
        </property>
        <property name="transactionAttributes">
            <props>
                <prop key="*">PROPAGATION_REQUIRED</prop>
            </props>
        </property>
    </bean>

    <bean id="navigableLogListener" class="org.sakaiproject.component.app.scheduler.NavigableEventLogListener"/>

    <bean id="org.sakaiproject.api.app.scheduler.SchedulerManager"
        class="org.sakaiproject.component.app.scheduler.SchedulerManagerImpl"
        init-method="init" destroy-method="destroy">        
        <property name="qrtzJobs">
            <set>                
                <value>org.sakaiproject.component.app.scheduler.jobs.TestJob</value>
                <value>org.sakaiproject.component.app.scheduler.jobs.TestJob2</value>
                <value>org.sakaiproject.component.app.scheduler.jobs.LongTestJob</value>
            </set>
        </property>
        <property name="qrtzPropFile">
            <value>quartz.properties</value>
        </property>    
        <property name="globalTriggerListener">
            <bean class="org.sakaiproject.component.app.scheduler.GlobalTriggerListener">
                <property name="triggerEventManager">
                    <ref bean="org.sakaiproject.api.app.scheduler.events.TriggerEventManager"/>
                    <!--bean class="org.sakaiproject.component.app.scheduler.events.TriggerEventManagerImpl"/-->
                </property>
            </bean>
        </property>
        <property name="globalTriggerListeners">
            <set>
                <ref bean="navigableLogListener"/>
            </set>
        </property>
        <property name="globalJobListeners">
            <set>
                <ref bean="navigableLogListener"/>
            </set>
        </property>
        <property name="dataSource">
          <ref bean="javax.sql.DataSource"/>    
        </property>
        <property name="serverId">
            <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
                <property name="targetObject"><ref bean="org.sakaiproject.component.api.ServerConfigurationService"/></property>
                <property name="targetMethod"><value>getString</value></property>
                <property name="arguments">
                    <list>
                        <value>serverId</value>
                    </list>
                </property>
            </bean>
        </property>
        <property name="autoDdl">
          <value>${auto.ddl}</value>
        </property>
        <property name="initialJobSchedules">
            <list>
                <ref bean="eventPurgeScheduling"/>
            </list>
        </property>
    </bean>
    
    <bean id="org.sakaiproject.api.app.scheduler.ScheduledInvocationManager"
        class="org.sakaiproject.component.app.scheduler.ScheduledInvocationManagerImpl"
        init-method="init" destroy-method="destroy"> 
        <property name="sqlService">
        	<ref bean="org.sakaiproject.db.api.SqlService"/>
        </property> 
        <property name="idManager">
        	<ref bean="org.sakaiproject.id.api.IdManager"/>
        </property>
        <property name="schedulerManager">
        	<ref bean="org.sakaiproject.api.app.scheduler.SchedulerManager"/>
        </property>
        <property name="serverConfigurationService">
        	<ref bean="org.sakaiproject.component.api.ServerConfigurationService"/>
        </property>
    </bean>   
    
    <bean id="eventPurgeJob" class="org.sakaiproject.component.app.scheduler.jobs.eventpurge.EventLogPurgeJob">
        <property name="triggerEventManager">
            <ref bean="org.sakaiproject.api.app.scheduler.events.TriggerEventManager"/>
        </property>
    </bean>

    <bean id="eventPurgeJobWrapper" class="org.sakaiproject.component.app.scheduler.jobs.SpringConfigurableJobBeanWrapper"
       init-method="init">
      <property name="beanId">
         <value>eventPurgeJob</value>
      </property>
      <property name="jobName">
         <value>Event Log Purge</value>
      </property>
      <property name="resourceBundleBase" value="org.sakaiproject.component.app.scheduler.jobs.eventpurge.Messages"/>
      <property name="configurableJobProperties">
          <set>
              <bean id="number.days" class="org.sakaiproject.component.app.scheduler.jobs.SpringConfigurableJobProperty">
                   <property name="required" value="true"/>
                   <property name="labelResourceKey" value="number.days"/>
                   <property name="descriptionResourceKey" value="number.days.description"/>
                   <property name="defaultValue" value="7"/>
              </bean>
          </set>
      </property>
      <property name="configurableJobPropertyValidator">
          <bean class="org.sakaiproject.component.app.scheduler.jobs.eventpurge.EventPurgeConfigurationValidator"/>
      </property>
      <property name="schedulerManager">
         <ref bean="org.sakaiproject.api.app.scheduler.SchedulerManager" />
      </property>
    </bean>

    <bean id="eventPurgeScheduling" class="org.sakaiproject.component.app.scheduler.jobs.SpringInitialJobSchedule">
        <property name="jobBeanWrapper"><ref bean="eventPurgeJobWrapper"/></property>
        <property name="jobName" value="Event Log Purge"/>
        <property name="triggerName" value="Nightly Log Purge Trigger"/>
        <property name="cronExpression" value="0 0 0 * * ? *"/>
        <property name="configuration">
            <map>
                <entry key="number.days" value="7"/>
            </map>
        </property>
    </bean>

    <!-- Testers for ScheduledInvocationManager  
    
    <bean id="scheduledInvocationRunner"
      class="org.sakaiproject.component.app.scheduler.jobs.ScheduledInvocationRunner">
   </bean>   
    
     <bean id="org.sakaiproject.api.app.scheduler.JobBeanWrapper.ScheduledInvocationRunner"
      class="org.sakaiproject.component.app.scheduler.jobs.SpringJobBeanWrapper" init-method="init">
      <property name="beanId">
         <value>scheduledInvocationRunner</value>
      </property>
      <property name="jobName">
         <value>Scheduled Invocation Runner</value>
      </property>
      <property name="schedulerManager">
         <ref bean="org.sakaiproject.api.app.scheduler.SchedulerManager" />
      </property>
   </bean>
   
    <bean id="scheduledInvocationTestJob"
      class="org.sakaiproject.component.app.scheduler.test.ScheduledInvocationTestJob">
      <property name="timeService">
        	<ref bean="org.sakaiproject.time.api.TimeService"/>
      </property>
      <property name="sim">
      		<ref bean="org.sakaiproject.api.app.scheduler.ScheduledInvocationManager"/>
      </property>	
   </bean>   
   
   <bean id="org.sakaiproject.api.app.scheduler.JobBeanWrapper.ScheduledInvocationTestJob"
      class="org.sakaiproject.component.app.scheduler.jobs.SpringJobBeanWrapper" init-method="init">
      <property name="beanId">
         <value>scheduledInvocationTestJob</value>
      </property>
      <property name="jobName">
         <value>Scheduled Invocation Test Job</value>
      </property>
      <property name="schedulerManager">
         <ref bean="org.sakaiproject.api.app.scheduler.SchedulerManager" />
      </property>
   </bean>
    
   <bean id="scheduledInvocationTestCommand" class="org.sakaiproject.component.app.scheduler.test.ScheduledInvocationTestCommand">
   </bean>
   -->
  
   
   <!-- sample bean job... this sample shows how to install a bean into quartz for scheduling -->

   <!-- this is the actual bean to execute.  This will have all
   spring injected values intact when executed -->
   <bean id="schedulerSampleTest"
      class="org.sakaiproject.component.app.scheduler.jobs.TestBeanJob">
      <property name="configMessage">
         <value>Hello from spring and quartz!</value>
      </property>
   </bean>

   <!-- this is the helper that will register the above bean with the schedule manager
        things to set here are the beanId (from bean above) and the jobName
   -->
   <bean id="org.sakaiproject.api.app.scheduler.JobBeanWrapper.schedulerSampleTest"
      class="org.sakaiproject.component.app.scheduler.jobs.SpringJobBeanWrapper"
      init-method="init">
      <property name="beanId">
         <value>schedulerSampleTest</value>
      </property>
      <property name="jobName">
         <value>Sample Bean Test</value>
      </property>
      <property name="schedulerManager">
         <ref bean="org.sakaiproject.api.app.scheduler.SchedulerManager" />
      </property>
   </bean>
   <!-- sample bean job -->
   
   
   <!-- Conditions Job -->
   		<!--  simple job that fires a Datetime event -->   
	   <bean id="datetimeJob"
	   		class="org.sakaiproject.conditions.job.DatetimeEventJob">
	   	</bean>
	   	

	   <!-- this is the helper that will register the above bean with the job scheduler -->
	   <!--
	   <bean id="org.sakaiproject.api.app.scheduler.JobBeanWrapper.DatetimeEventJob"
	      class="org.sakaiproject.component.app.scheduler.jobs.SpringJobBeanWrapper" init-method="init">
	      <property name="beanId">
	         <value>datetimeJob</value>
	      </property>
	      <property name="jobName">
	         <value>Conditional Release Datetime Job</value>
	      </property>
	      <property name="schedulerManager">
	         <ref bean="org.sakaiproject.api.app.scheduler.SchedulerManager" />
	      </property>
	   </bean>
	   -->
   
</beans>
