<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- Bring in the HBM related beans beans -->
	<import resource="hibernate-hbms.xml" />

	<!-- Bring in the hibernate related beans -->
	<!-- This is in the implementation so it can be used by tests but then loaded from the classpath here. -->
	<import resource="classpath:org/sakaiproject/poll/spring-hibernate.xml" />

	<!-- create a logic bean, give it the dao from above and some sakai services -->
		<bean id="org.sakaiproject.poll.logic.PollListManager"
		class="org.sakaiproject.poll.service.impl.PollListManagerImpl"
		lazy-init="true" init-method="init">
		<property name="dao" ref="org.sakaiproject.poll.dao.PollDao"/>
		<property name="idManager"
			ref="org.sakaiproject.id.api.IdManager" />
				<property name="entityManager"
			ref="org.sakaiproject.entity.api.EntityManager" />
		<property name="externalLogic"
			  ref="org.sakaiproject.poll.logic.ExternalLogic"/>
		<property name="pollVoteManager" ref="org.sakaiproject.tool.poll.api.PollVoteManager"/>
    </bean>

	<bean id="org.sakaiproject.tool.poll.api.PollVoteManager"
		class="org.sakaiproject.poll.service.impl.PollVoteManagerImpl"
		lazy-init="true">
		<property name="dao" ref="org.sakaiproject.poll.dao.PollDao"/>
		<property name="externalLogic" ref="org.sakaiproject.poll.logic.ExternalLogic"/>
		<property name="pollListManager" ref="org.sakaiproject.poll.logic.PollListManager"/>
	</bean>

	<bean id="org.sakaiproject.poll.logic.ExternalLogic" class="org.sakaiproject.poll.logic.impl.ExternalLogicImpl"
			init-method="init">
		<property name="developerHelperService" ref="org.sakaiproject.entitybroker.DeveloperHelperService"/>
		<property name="learningResourceStoreService" ref="org.sakaiproject.event.api.LearningResourceStoreService"/>
		<property name="authzGroupService" ref="org.sakaiproject.authz.api.AuthzGroupService"/>
		<property name="emailService" ref="org.sakaiproject.email.api.EmailService" />
		<property name="emailTemplateService" ref="org.sakaiproject.emailtemplateservice.service.EmailTemplateService" />
		<property name="entityManager" ref="org.sakaiproject.entity.api.EntityManager"/>
		<property name="eventTrackingService"
			ref="org.sakaiproject.event.api.EventTrackingService" />
		<property name="functionManager"
			ref="org.sakaiproject.authz.api.FunctionManager" />
		<property name="userTimeService"
			ref="org.sakaiproject.time.api.UserTimeService" />
		<property name="siteService" ref="org.sakaiproject.site.api.SiteService"/>
		<property name="securityService" ref="org.sakaiproject.authz.api.SecurityService" />
		<property name="serverConfigurationService" ref="org.sakaiproject.component.api.ServerConfigurationService" />
		<property name="sessionManager" ref="org.sakaiproject.tool.api.SessionManager" />
		<property name="userDirectoryService" ref="org.sakaiproject.user.api.UserDirectoryService"/>

		<!-- inject other resources -->
		<property name="emailTemplates" ref="org.sakaiproject.poll.emailtemplates.List" />
	</bean>

	<!-- Setup email templates -->
	<bean id="org.sakaiproject.poll.emailtemplates.List" class="java.util.ArrayList">
		<constructor-arg>
      		<list>
        		<value>org/sakaiproject/poll/templates/notifyDeletedOption.xml</value>
        		<value>org/sakaiproject/poll/templates/notifyDeletedOption-zh_CN.xml</value>
      		</list>      
    	</constructor-arg>
  	</bean>
</beans>
