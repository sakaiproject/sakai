<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--  -->
    <import resource="mock-services.xml" />

    <!-- Read file properties -->
    <bean id="testPropertiesConfigurer"
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:/hibernate.properties</value>
                <value>classpath:/test-sakai.properties</value>
            </list>
        </property>
    </bean>

    <!-- Data source -->
    <bean id="javax.sql.DataSource"
        class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName">
            <value>${hibernate.connection.driver_class}</value>
        </property>
        <property name="url">
            <value>${hibernate.connection.url}</value>
        </property>
        <property name="username">
            <value>${hibernate.connection.username}</value>
        </property>
        <property name="password">
            <value>${hibernate.connection.password}</value>
        </property>
    </bean>

    <!-- SessionFactory -->
    <bean id="org.sakaiproject.springframework.orm.hibernate.GlobalSessionFactory"
        class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <property name="dataSource" ref="javax.sql.DataSource" />
        <property name="mappingResources" ref="org.sakaiproject.sitestats.HibernateMappings" />
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.cache.use_query_cache">${hibernate.use_cache}</prop>
                <prop key="hibernate.cache.provider_class">${hibernate.cache.provider_class}</prop>
                <prop key="hibernate.query.substitutions">true 1, false 0</prop>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
                <prop key="hibernate.query.factory_class">${hibernate.query.factory_class}</prop>
            </props>
        </property>
    </bean>

    <!-- Transaction manager from the SessionFactory --> 
    <bean id="org.sakaiproject.springframework.orm.hibernate.GlobalTransactionManager"
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="javax.sql.DataSource"/>
    </bean>
    <bean abstract="true" id="sstTxTemplate"
        class="org.springframework.orm.hibernate3.support.HibernateDaoSupport">
        <property name="sessionFactory" ref="org.sakaiproject.springframework.orm.hibernate.GlobalSessionFactory" />
    </bean>
    
    
    <!-- __________________________________________________________________________________________________________ -->

    <!-- Create a test data preload bean -->
    <bean id="org.sakaiproject.sitestats.test.data.FakeDataPreload"
        class="org.sakaiproject.sitestats.test.data.FakeDataPreload"
        init-method="init">
    </bean>
    
    <!-- DB access class, for comparing actual with expected results -->
    <bean id="org.sakaiproject.sitestats.test.DB" parent="sstTxTemplate" class="org.sakaiproject.sitestats.test.DBImpl"/>
        
    <!-- [START] Classes that will test others -->
    <bean id="org.sakaiproject.sitestats.test.StatsUpdateManagerTest"
        class="org.sakaiproject.sitestats.test.StatsUpdateManagerTest">
        <property name="statsUpdateManager" ref="org.sakaiproject.sitestats.test.StatsUpdateManager"/>
        <property name="statsManager" ref="org.sakaiproject.sitestats.test.StatsManager"/>
        <!--<property name="siteService" ref="org.sakaiproject.mock.service.SiteService"/>-->
        <property name="eventTrackingService" ref="org.sakaiproject.sitestats.test.mocks.FakeEventTrackingService"/>
        <property name="db" ref="org.sakaiproject.sitestats.test.DB"/>
    </bean>
    <!-- [END] Classes that will test others -->
    
    
    <!-- [START] Target classes to test -->
    <bean id="org.sakaiproject.sitestats.test.StatsUpdateManager" parent="sstTxTemplate"
        class="org.sakaiproject.sitestats.impl.StatsUpdateManagerImpl"
        lazy-init="true" init-method="init" destroy-method="destroy">
                <property name="collectThreadEnabled" value="true"/>
                <property name="collectThreadUpdateInterval" value="50"/>
                <property name="collectAdminEvents" value="true" />
                <property name="collectEventsForSiteWithToolOnly" value="false" />
                
                <property name="sessionFactory" ref="org.sakaiproject.springframework.orm.hibernate.GlobalSessionFactory"/>
                <property name="statsManager" ref="org.sakaiproject.sitestats.test.StatsManager" />
                <property name="eventRegistryService" ref="org.sakaiproject.sitestats.test.mocks.FakeEventRegistryService"/>
                <property name="siteService" ref="org.sakaiproject.mock.service.SiteService"/>
                <property name="aliasService" ref="org.sakaiproject.sitestats.test.mocks.FakeAliasService"/>
                <property name="entityManager" ref="org.sakaiproject.sitestats.test.mocks.FakeEntityManager"/>
                <property name="eventTrackingService" ref="org.sakaiproject.sitestats.test.mocks.FakeEventTrackingService"/>
                <property name="usageSessionService" ref="org.sakaiproject.sitestats.test.mocks.FakeUsageSessionService" />
    </bean>
    <bean id="org.sakaiproject.sitestats.test.StatsManager" parent="sstTxTemplate"
        class="org.sakaiproject.sitestats.impl.StatsManagerImpl"
        lazy-init="true" init-method="init" destroy-method="destroy">
                <property name="chartBackgroundColor" value="#ffffff" />
                <property name="chartIn3D" value="false" />
                <property name="chartTransparency" value="1.00f" />
                <property name="itemLabelsVisible" value="true" />
                <property name="sessionFactory" ref="org.sakaiproject.springframework.orm.hibernate.GlobalSessionFactory"/>
                <property name="eventRegistryService" ref="org.sakaiproject.sitestats.test.mocks.FakeEventRegistryService"/>
                <property name="userService" ref="org.sakaiproject.mock.service.UserDirectoryService"/>
                <property name="siteService" ref="org.sakaiproject.mock.service.SiteService"/>
                <property name="serverConfigurationService" ref="org.sakaiproject.sitestats.test.mocks.FakeServerConfigurationService"/>
                <property name="toolManager" ref="org.sakaiproject.sitestats.test.mocks.FakeToolManager"/>
                <property name="memoryService" ref="org.sakaiproject.sitestats.test.mocks.FakeMemoryService" />
                <property name="sessionManager" ref="org.sakaiproject.sitestats.test.mocks.FakeSessionManager" />
                <property name="eventTrackingService" ref="org.sakaiproject.sitestats.test.mocks.FakeEventTrackingService"/>                
    </bean>
    <!-- [END] Target classes to test -->
    
    
    <!-- MOCK Services -->
    <bean id="org.sakaiproject.mock.service.SiteService" class="org.sakaiproject.mock.service.SiteService"/>
    <bean id="org.sakaiproject.mock.service.UserDirectoryService" class="org.sakaiproject.mock.service.UserDirectoryService"/>
    <bean id="org.sakaiproject.sitestats.test.mocks.FakeToolManager" class="org.sakaiproject.sitestats.test.mocks.FakeToolManager"/>
    <bean id="org.sakaiproject.sitestats.test.mocks.FakeEventRegistryService" class="org.sakaiproject.sitestats.test.mocks.FakeEventRegistryService"/>
    <bean id="org.sakaiproject.sitestats.test.mocks.FakeAliasService" class="org.sakaiproject.sitestats.test.mocks.FakeAliasService"/>
    <bean id="org.sakaiproject.sitestats.test.mocks.FakeEntityManager" class="org.sakaiproject.sitestats.test.mocks.FakeEntityManager"/>
    <bean id="org.sakaiproject.sitestats.test.mocks.FakeEventTrackingService" class="org.sakaiproject.sitestats.test.mocks.FakeEventTrackingService"/>
    <bean id="org.sakaiproject.sitestats.test.mocks.FakeUsageSessionService" class="org.sakaiproject.sitestats.test.mocks.FakeUsageSessionService"/>
    <bean id="org.sakaiproject.sitestats.test.mocks.FakeServerConfigurationService" class="org.sakaiproject.sitestats.test.mocks.FakeServerConfigurationService"/>
    <bean id="org.sakaiproject.sitestats.test.mocks.FakeMemoryService" class="org.sakaiproject.sitestats.test.mocks.FakeMemoryService"/>
    <bean id="org.sakaiproject.sitestats.test.mocks.FakeSessionManager" class="org.sakaiproject.sitestats.test.mocks.FakeSessionManager"/>
</beans>