<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="org.sakaiproject.chat2.model.ChatHibernateBean"
        class="org.sakaiproject.springframework.orm.hibernate.impl.AdditionalHibernateMappingsImpl">
        <property name="annotatedClasses">
            <list>
                <value>org.sakaiproject.chat2.model.ChatChannel</value>
				<value>org.sakaiproject.chat2.model.ChatMessage</value>
            </list>
        </property>
    </bean>


    <bean id="org.sakaiproject.chat2.model.ChatManager"
        class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="target">
			<bean class="org.sakaiproject.chat2.model.impl.ChatManagerImpl"
				  init-method="init"
				  destroy-method="destroy">
				<property name="sessionFactory" ref="org.sakaiproject.springframework.orm.hibernate.GlobalSessionFactory"/>
				<property name="defaultChannelSettings" ref="defaultChatChannelSettings"/>
				<property name="userDirectoryService" ref="org.sakaiproject.user.api.UserDirectoryService"/>
				<property name="serverConfigurationService" ref="org.sakaiproject.component.api.ServerConfigurationService"/>
				<property name="presenceService" ref="org.sakaiproject.presence.api.PresenceService"/>
				<property name="sessionManager" ref="org.sakaiproject.tool.api.SessionManager" />
				<property name="usageSessionService" ref="org.sakaiproject.event.api.UsageSessionService"/>
				<property name="formattedText" ref="org.sakaiproject.util.api.FormattedText"/>
				<property name="preferencesService" ref="org.sakaiproject.user.api.PreferencesService"/>
				<property name="securityService" ref="org.sakaiproject.authz.api.SecurityService"/>
				<property name="functionManager" ref="org.sakaiproject.authz.api.FunctionManager"/>
				<property name="siteService" ref="org.sakaiproject.site.api.SiteService"/>
				<property name="eventTrackingService" ref="org.sakaiproject.event.api.EventTrackingService"/>
			</bean>
		</property>
        <property name="transactionManager" ref="org.sakaiproject.springframework.orm.hibernate.GlobalTransactionManager" />
		<property name="transactionAttributes">
            <props>
                <prop key="*">PROPAGATION_REQUIRED</prop>
            </props>
        </property>
    </bean>

    <bean id="defaultChatChannelSettings"
    		class="org.sakaiproject.chat2.model.ChatChannel">
    	<property name="filterType">
    		<bean id="org.sakaiproject.chat2.model.ChatChannel.FILTER_ALL"
               class="org.springframework.beans.factory.config.FieldRetrievingFactoryBean">
         </bean>
      </property>
    	<property name="filterParam"><value>3</value></property>
    	<property name="timeParam"><value>3</value></property>
    	<property name="numberParam"><value>10</value></property>
    	<property name="enableUserOverride"><value>true</value></property>
    </bean>
    
   
   <bean id="org.sakaiproject.chat2.model.impl.ChatDataMigration"
      class="org.sakaiproject.chat2.model.impl.ChatDataMigration"
      init-method="init"
		destroy-method="destroy">
      <property name="sqlService"><ref bean="org.sakaiproject.db.api.SqlService"/></property>
      <property name="chatManager"><ref bean="org.sakaiproject.chat2.model.ChatManager"/></property>
      <property name="performChatMigration">
    		<value>false</value>
    	</property>
    	<property name="chatMigrationExecuteImmediate">
    		<value>true</value>
    	</property>
   </bean>

    <bean id="org.sakaiproject.chat2.model.impl.ChatEntityProducer"
      class="org.sakaiproject.chat2.model.impl.ChatEntityProducer"
      init-method="init"
		destroy-method="destroy">
      <property name="entityManager">
         <ref bean="org.sakaiproject.entity.api.EntityManager"/>
      </property>
      <property name="chatManager"><ref bean="org.sakaiproject.chat2.model.ChatManager"/></property>
   </bean>

	<bean id="org.sakaiproject.chat2.model.impl.ChatChannelEntityProvider"
		class="org.sakaiproject.chat2.model.impl.ChatChannelEntityProvider">
      <property name="chatManager"><ref bean="org.sakaiproject.chat2.model.ChatManager"/></property>
	</bean>

	<bean id="org.sakaiproject.chat2.model.impl.ChatMessageEntityProvider"
		class="org.sakaiproject.chat2.model.impl.ChatMessageEntityProvider">
      <property name="chatManager"><ref bean="org.sakaiproject.chat2.model.ChatManager"/></property>
      <property name="userDirectoryService"><ref bean="org.sakaiproject.user.api.UserDirectoryService"/></property>
      <property name="sessionManager"><ref bean="org.sakaiproject.tool.api.SessionManager"/></property>
      <property name="formattedText"><ref bean="org.sakaiproject.util.api.FormattedText"/></property>
	</bean>


    <bean id="chatSearchAdapter"
    	class="org.sakaiproject.chat2.model.impl.ChatContentProducer"
    	init-method="init" destroy-method="destroy">
    	<property name="addEvents">
    		<list>
    			<value>chat.new</value>
    			<value>chat.revise.own</value>
    			<value>chat.revise.any</value>
    		</list>
    	</property>
    	<property name="removeEvents">
    		<list>
    			<value>chat.delete.own</value>
    			<value>chat.delete.any</value>
    		</list>
    	</property>
    	<property name="entityManager">
         <ref bean="org.sakaiproject.entity.api.EntityManager"/>
      </property>
      <property name="chatManager">
      	<ref bean="org.sakaiproject.chat2.model.ChatManager"/>
      </property>
      <property name="searchService">
      	<ref bean="org.sakaiproject.search.api.SearchService" />
      </property>
      <property name="searchIndexBuilder">
      	<ref bean="org.sakaiproject.search.api.SearchIndexBuilder" />
      </property>
      <property name="siteService" ref="org.sakaiproject.site.api.SiteService"/>
    </bean>

</beans>
