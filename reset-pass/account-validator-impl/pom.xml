<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<name>Sakai Account Validator Implementation</name>
	<groupId>org.sakaiproject.accountvalidator
	</groupId>
	<artifactId>accountvalidator-impl</artifactId>
	<organization>
		<name>Sakai Project</name>
		<url>http://sakaiproject.org/</url>
	</organization>
	<inceptionYear>2007</inceptionYear>
	<description>Account Validator implementation</description>
	<packaging>sakai-component</packaging>
	<properties>
		<deploy.target>components</deploy.target>
	</properties>

   <!-- the base is parent -->
	<parent>
		<groupId>org.sakaiproject.reset-pass</groupId>
		<artifactId>reset-pass</artifactId>
		<version>12-SNAPSHOT</version>
	</parent>
	<dependencies>

      <!-- internal dependencies -->
		<dependency>
			<groupId>org.sakaiproject.accountvalidator
			</groupId>
			<artifactId>accountvalidator-api</artifactId>
			<scope>provided</scope>
		</dependency>      

	  <!-- email dependencies -->
		<dependency>
			<groupId>com.sun.mail</groupId>
			<artifactId>javax.mail</artifactId>
		</dependency>

      <!-- generic DAO -->
		<dependency>
			<groupId>org.sakaiproject.genericdao</groupId>
			<artifactId>generic-dao</artifactId>
		</dependency>

      <!-- spring and hibernate -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
		</dependency>

      <!-- Various Sakai dependencies -->
		<dependency>
			<groupId>org.sakaiproject.kernel</groupId>
			<artifactId>sakai-kernel-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.sakaiproject.kernel</groupId>
			<artifactId>sakai-component-manager
			</artifactId>
		</dependency>
		<dependency>
			<groupId>org.sakaiproject.kernel</groupId>
			<artifactId>sakai-kernel-util</artifactId>
		</dependency>
		<dependency>
			<groupId>org.sakaiproject.emailtemplateservice
			</groupId>
			<artifactId>emailtemplateservice-api
			</artifactId>
		</dependency>
		<!--
			<dependency> <groupId>org.sakaiproject.kernel</groupId>
			<artifactId>sakai-util-api</artifactId> </dependency>
		-->
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
		</dependency>
		<dependency>
			<groupId>org.sakaiproject.entitybroker
			</groupId>
			<artifactId>entitybroker-api</artifactId>
		</dependency>
           <dependency>
                <groupId>org.quartz-scheduler</groupId>
                <artifactId>quartz</artifactId>

            </dependency>


      <!-- testing dependencies -->
      <!-- The spring-mock stuff seems to have been rolled into spring-test -->
		<!--<dependency>-->
			<!--<groupId>org.springframework</groupId>-->
			<!--<artifactId>spring-mock</artifactId>-->
			<!--<version>2.0.6</version>-->
			<!--<scope>provided</scope>-->
		<!--</dependency>-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>dom4j</groupId>
			<artifactId>dom4j</artifactId>
			<version>1.6.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.transaction</groupId>
			<artifactId>jta</artifactId>
		</dependency>
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib-nodep</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
		</dependency>
		<dependency>
			<groupId>easymock</groupId>
			<artifactId>easymock</artifactId>
			<version>1.2_Java1.3</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>commons-validator</groupId>
			<artifactId>commons-validator</artifactId>
		</dependency>
		<dependency>
			<groupId>oro</groupId>
			<artifactId>oro</artifactId>
			<version>2.0.8</version>
		</dependency>
		<dependency>
			<groupId>jdom</groupId>
			<artifactId>jdom</artifactId>
			<version>1.0</version>
		</dependency>
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>${joda.time.version}</version>
		</dependency>
	</dependencies>
	<build>
		<resources>
			<resource>
				<directory>${basedir}/src/bundle</directory>
				<includes>
					<include>**/*.properties</include>
					<include>**/*.xml</include>
				</includes>
				<filtering>false</filtering>
			</resource>
			<resource>
				<directory>${basedir}/src/java</directory>
				<includes>
					<include>**/*.xml</include>
				</includes>
				<filtering>false</filtering>
			</resource>
			<!-- <resource>
				<directory>${basedir}/../tool/src/webapp/WEB-INF/bundle
				</directory>
				<includes>
					<include>**/*.properties</include>
				</includes>
			</resource> -->
		</resources>

      <!-- unit testing -->
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<!--
					By default, the surefire plugin will automatically include all test
					classes with the following wildcard patterns: "**/Test*.java" -
					includes all of its subdirectory and all java filenames that start
					with "Test". "**/*Test.java" - includes all of its subdirectory and
					all java filenames that end with "Test". "**/*TestCase.java" -
					includes all of its subdirectory and all java filenames that end
					with "TestCase".
				-->
			</plugin>
		</plugins>
		<!-- <testResources>
			<testResource>
				<directory>${basedir}/../pack/src/webapp/WEB-INF
				</directory>
				<includes>
					<include>spring-hibernate.xml</include>
					<include>logic-support.xml</include>
				</includes>
			</testResource>
			<testResource>
				<directory>${basedir}/src/test</directory>
				<includes>
					<include>hibernate-test.xml</include>
					<include>hibernate.properties</include>
				</includes>
			</testResource>
		</testResources> -->

     
	</build>
</project>
