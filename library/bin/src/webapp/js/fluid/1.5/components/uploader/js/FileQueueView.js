var fluid_1_5=fluid_1_5||{};!function($,fluid){"use strict";fluid.registerNamespace("fluid.uploader.fileQueueView"),fluid.uploader.fileQueueView.rowForFile=function(that,file){return that.locate("fileQueue").find("#"+file.id)},fluid.uploader.fileQueueView.errorRowForFile=function(that,file){return $("#"+file.id+"_error",that.container)},fluid.uploader.fileQueueView.fileForRow=function(that,row){return fluid.find_if(that.model,function(file){return file.id.toString()===row.prop("id")})},fluid.uploader.fileQueueView.progressorForFile=function(that,file){var progressId=file.id+"_progress";return that.fileProgressors[progressId]},fluid.uploader.fileQueueView.startFileProgress=function(that,file){var fileRowElm=fluid.uploader.fileQueueView.rowForFile(that,file);that.scroller.scrollTo(fileRowElm);var fileProgressor=fluid.uploader.fileQueueView.progressorForFile(that,file);fileProgressor.refreshView(),fileProgressor.show()},fluid.uploader.fileQueueView.updateFileProgress=function(that,file,fileBytesComplete,fileTotalBytes){var filePercent=fluid.uploader.derivePercent(fileBytesComplete,fileTotalBytes),filePercentStr=filePercent+"%";fluid.uploader.fileQueueView.progressorForFile(that,file).update(filePercent,filePercentStr)},fluid.uploader.fileQueueView.hideFileProgress=function(that,file){var fileRowElm=fluid.uploader.fileQueueView.rowForFile(that,file);fluid.uploader.fileQueueView.progressorForFile(that,file).hide(),file.filestatus===fluid.uploader.fileStatusConstants.COMPLETE&&that.locate("fileIconBtn",fileRowElm).removeClass(that.options.styles.dim)},fluid.uploader.fileQueueView.removeFileProgress=function(that,file){var fileProgressor=fluid.uploader.fileQueueView.progressorForFile(that,file);if(fileProgressor){var rowProgressor=fileProgressor.displayElement;rowProgressor.remove()}},fluid.uploader.fileQueueView.animateRowRemoval=function(that,row){row.fadeOut("fast",function(){row.remove(),that.refreshView()})},fluid.uploader.fileQueueView.removeFileErrorRow=function(that,file){file.filestatus===fluid.uploader.fileStatusConstants.ERROR&&fluid.uploader.fileQueueView.animateRowRemoval(that,fluid.uploader.fileQueueView.errorRowForFile(that,file))},fluid.uploader.fileQueueView.removeFileAndRow=function(that,file,row){fluid.uploader.fileQueueView.removeFileProgress(that,file),fluid.uploader.fileQueueView.removeFileErrorRow(that,file),that.events.onFileRemoved.fire(file),fluid.uploader.fileQueueView.animateRowRemoval(that,row)},fluid.uploader.fileQueueView.removeFileForRow=function(that,row){var file=fluid.uploader.fileQueueView.fileForRow(that,row);file&&file.filestatus!==fluid.uploader.fileStatusConstants.COMPLETE&&fluid.uploader.fileQueueView.removeFileAndRow(that,file,row)},fluid.uploader.fileQueueView.removeRowForFile=function(that,file){var row=fluid.uploader.fileQueueView.rowForFile(that,file);fluid.uploader.fileQueueView.removeFileAndRow(that,file,row)},fluid.uploader.fileQueueView.bindHover=function(row,styles){var over=function(){row.hasClass(styles.ready)&&!row.hasClass(styles.uploading)&&row.addClass(styles.hover)},out=function(){row.hasClass(styles.ready)&&!row.hasClass(styles.uploading)&&row.removeClass(styles.hover)};row.hover(over,out)},fluid.uploader.fileQueueView.bindDeleteKey=function(that,row){var deleteHandler=function(){fluid.uploader.fileQueueView.removeFileForRow(that,row)};fluid.activatable(row,null,{additionalBindings:[{key:$.ui.keyCode.DELETE,activateHandler:deleteHandler}]})},fluid.uploader.fileQueueView.bindRowHandlers=function(that,row){$.browser.msie&&$.browser.version<7&&fluid.uploader.fileQueueView.bindHover(row,that.options.styles),that.locate("fileIconBtn",row).click(function(){fluid.uploader.fileQueueView.removeFileForRow(that,row)}),fluid.uploader.fileQueueView.bindDeleteKey(that,row)},fluid.uploader.fileQueueView.renderRowFromTemplate=function(that,file){var row=that.rowTemplate.clone(),fileName=file.name,fileSize=fluid.uploader.formatFileSize(file.size);row.removeClass(that.options.styles.hiddenTemplate),that.locate("fileName",row).text(fileName),that.locate("fileSize",row).text(fileSize);var fileIconBtn=that.locate("fileIconBtn",row);return fileIconBtn.addClass(that.options.styles.remove),fluid.updateAriaLabel(fileIconBtn,that.options.strings.buttons.remove),row.prop("id",file.id),row.addClass(that.options.styles.ready),fluid.uploader.fileQueueView.bindRowHandlers(that,row),fluid.updateAriaLabel(row,fileName+" "+fileSize+" "+that.options.strings.status.remove),row},fluid.uploader.fileQueueView.createProgressorFromTemplate=function(that,row){var rowProgressor=that.rowProgressorTemplate.clone(),rowId=row.prop("id"),progressId=rowId+"_progress";rowProgressor.prop("id",progressId),rowProgressor.css("top",row.position().top),rowProgressor.height(row.height()).width(5),that.container.after(rowProgressor),that.fileProgressors[progressId]=fluid.progress(that.options.uploaderContainer,{selectors:{progressBar:"#"+rowId,displayElement:"#"+progressId,label:"#"+progressId+" .fl-uploader-file-progress-text",indicator:"#"+progressId}})},fluid.uploader.fileQueueView.addFile=function(that,file){var row=fluid.uploader.fileQueueView.renderRowFromTemplate(that,file);$.browser.msie&&$.browser.version>=8||row.hide(),that.container.append(row),row.attr("title",that.options.strings.status.remove),row.fadeIn("slow"),fluid.uploader.fileQueueView.createProgressorFromTemplate(that,row),that.refreshView(),that.scroller.scrollTo("100%")},fluid.uploader.fileQueueView.enableRows=function(rows,state){for(var i=0;i<rows.length;i++)fluid.enabled(rows[i],state)},fluid.uploader.fileQueueView.prepareForUpload=function(that){var rowButtons=that.locate("fileIconBtn",that.locate("fileRows"));rowButtons.prop("disabled",!0),rowButtons.addClass(that.options.styles.dim),fluid.uploader.fileQueueView.enableRows(that.locate("fileRows"),!1)},fluid.uploader.fileQueueView.refreshAfterUpload=function(that){var rowButtons=that.locate("fileIconBtn",that.locate("fileRows"));rowButtons.prop("disabled",!1),rowButtons.removeClass(that.options.styles.dim),fluid.uploader.fileQueueView.enableRows(that.locate("fileRows"),!0)},fluid.uploader.fileQueueView.changeRowState=function(that,row,newState){row.removeClass(that.options.styles.ready).removeClass(that.options.styles.error).addClass(newState)},fluid.uploader.fileQueueView.markRowAsComplete=function(that,file){var row=fluid.uploader.fileQueueView.rowForFile(that,file);fluid.uploader.fileQueueView.changeRowState(that,row,that.options.styles.uploaded),row.attr("title",that.options.strings.status.success),fluid.enabled(row,!1);var removeRowBtn=that.locate("fileIconBtn",row);removeRowBtn.unbind("click"),removeRowBtn.removeClass(that.options.styles.remove),removeRowBtn.attr("title",that.options.strings.status.success)},fluid.uploader.fileQueueView.renderErrorInfoFromTemplate=function(that,fileRow,error){var errorRow=that.errorInfoTemplate.clone();errorRow.prop("id",fileRow.prop("id")+"_error");var errorType=fluid.keyForValue(fluid.uploader.errorConstants,error),errorMsg=that.options.strings.errors[errorType];that.locate("errorText",errorRow).text(errorMsg),that.locate("fileName",fileRow).after(errorRow),that.scroller.scrollTo(errorRow)},fluid.uploader.fileQueueView.showErrorForFile=function(that,file,error){if(fluid.uploader.fileQueueView.hideFileProgress(that,file),file.filestatus===fluid.uploader.fileStatusConstants.ERROR){var fileRowElm=fluid.uploader.fileQueueView.rowForFile(that,file);fluid.uploader.fileQueueView.changeRowState(that,fileRowElm,that.options.styles.error),fluid.uploader.fileQueueView.renderErrorInfoFromTemplate(that,fileRowElm,error)}},fluid.uploader.fileQueueView.addKeyboardNavigation=function(that){fluid.tabbable(that.container),that.selectableContext=fluid.selectable(that.container,{selectableSelector:that.options.selectors.fileRows,onSelect:function(itemToSelect){$(itemToSelect).addClass(that.options.styles.selected)},onUnselect:function(selectedItem){$(selectedItem).removeClass(that.options.styles.selected)}})},fluid.uploader.fileQueueView.prepareTemplateElements=function(that){that.errorInfoTemplate=that.locate("errorInfoTemplate").remove(),that.errorInfoTemplate.removeClass(that.options.styles.hiddenTemplate),that.rowTemplate=that.locate("rowTemplate").remove(),that.rowProgressorTemplate=that.locate("rowProgressorTemplate",that.options.uploaderContainer).remove()},fluid.uploader.fileQueueView.markFileComplete=function(that,file){fluid.uploader.fileQueueView.progressorForFile(that,file).update(100,"100%"),fluid.uploader.fileQueueView.markRowAsComplete(that,file)},fluid.uploader.fileQueueView.refreshView=function(that){that.selectableContext.refresh(),that.scroller.refreshView()},fluid.defaults("fluid.uploader.fileQueueView",{gradeNames:["fluid.viewComponent","autoInit"],members:{fileProgressors:{}},invokers:{addFile:{funcName:"fluid.uploader.fileQueueView.addFile",args:["{that}","{arguments}.0"]},removeFile:{funcName:"fluid.uploader.fileQueueView.removeRowForFile",args:["{that}","{arguments}.0"]},prepareForUpload:{funcName:"fluid.uploader.fileQueueView.prepareForUpload",args:"{that}"},refreshAfterUpload:{funcName:"fluid.uploader.fileQueueView.refreshAfterUpload",args:"{that}"},showFileProgress:{funcName:"fluid.uploader.fileQueueView.startFileProgress",args:["{that}","{arguments}.0"]},updateFileProgress:{funcName:"fluid.uploader.fileQueueView.updateFileProgress",args:["{that}","{arguments}.0","{arguments}.1","{arguments}.2"]},markFileComplete:{funcName:"fluid.uploader.fileQueueView.markFileComplete",args:["{that}","{arguments}.0"]},showErrorForFile:{funcName:"fluid.uploader.fileQueueView.showErrorForFile",args:["{that}","{arguments}.0","{arguments}.1"]},hideFileProgress:{funcName:"fluid.uploader.fileQueueView.hideFileProgress",args:["{that}","{arguments}.0"]},refreshView:{funcName:"fluid.uploader.fileQueueView.refreshView",args:"{that}"}},components:{scroller:{type:"fluid.scrollableTable"},eventBinder:{type:"fluid.uploader.fileQueueView.eventBinder"}},selectors:{fileRows:".flc-uploader-file",fileName:".flc-uploader-file-name",fileSize:".flc-uploader-file-size",fileIconBtn:".flc-uploader-file-action",errorText:".flc-uploader-file-error",rowTemplate:".flc-uploader-file-tmplt",errorInfoTemplate:".flc-uploader-file-error-tmplt",rowProgressorTemplate:".flc-uploader-file-progressor-tmplt"},styles:{hover:"fl-uploader-file-hover",selected:"fl-uploader-file-focus",ready:"fl-uploader-file-state-ready",uploading:"fl-uploader-file-state-uploading",uploaded:"fl-uploader-file-state-uploaded",error:"fl-uploader-file-state-error",remove:"fl-uploader-file-action-remove",dim:"fl-uploader-dim",hiddenTemplate:"fl-uploader-hidden-templates"},strings:{progress:{toUploadLabel:"To upload: %fileCount %fileLabel (%totalBytes)",singleFile:"file",pluralFiles:"files"},status:{success:"File Uploaded",error:"File Upload Error",remove:"Press Delete key to remove file"},errors:{HTTP_ERROR:"File upload error: a network error occured or the file was rejected (reason unknown).",IO_ERROR:"File upload error: a network error occured.",UPLOAD_LIMIT_EXCEEDED:"File upload error: you have uploaded as many files as you are allowed during this session",UPLOAD_FAILED:"File upload error: the upload failed for an unknown reason.",QUEUE_LIMIT_EXCEEDED:"You have as many files in the queue as can be added at one time. Removing files from the queue may allow you to add different files.",FILE_EXCEEDS_SIZE_LIMIT:"One or more of the files that you attempted to add to the queue exceeded the limit of %fileSizeLimit.",ZERO_BYTE_FILE:"One or more of the files that you attempted to add contained no data.",INVALID_FILETYPE:"One or more files were not added to the queue because they were of the wrong type."},buttons:{remove:"Remove"}},events:{onFileRemoved:null},listeners:{onCreate:[{listener:"fluid.uploader.fileQueueView.prepareTemplateElements",args:"{that}"},{listener:"fluid.uploader.fileQueueView.addKeyboardNavigation",args:"{that}"}]}}),fluid.defaults("fluid.uploader.fileQueueView.eventBinder",{gradeNames:["fluid.eventedComponent","autoInit"]}),fluid.registerNamespace("fluid.scrollable"),fluid.scrollable.makeSimple=function(element){return fluid.container(element)},fluid.scrollable.makeTable=function(table,options){return table.wrap(options.wrapperMarkup),table.closest(".fl-scrollable-scroller")},fluid.defaults("fluid.scrollable",{gradeNames:["fluid.viewComponent","autoInit"],makeScrollableFn:fluid.scrollable.makeSimple,members:{scrollable:{expander:{func:"{that}.options.makeScrollableFn",args:["{that}.container","{that}.options"]}},maxHeight:{expander:{"this":"{that}.scrollable",method:"css",args:"max-height"}}},invokers:{scrollTo:{"this":"{that}.scrollable",method:"scrollTo",args:"{arguments}.0"},refreshView:{funcName:"fluid.scrollable.refreshView",args:"{that}"}},listeners:{onCreate:"{that}.refreshView"}}),fluid.scrollable.refreshView=function(that){$.browser.msie&&"6.0"===$.browser.version&&(that.scrollable.css("height",""),that.scrollable.height()>=parseInt(that.maxHeight,10)&&that.scrollable.css("height",that.maxHeight))},fluid.defaults("fluid.scrollableTable",{gradeNames:["fluid.scrollable","autoInit"],makeScrollableFn:fluid.scrollable.makeTable,wrapperMarkup:"<div class='fl-scrollable-scroller'><div class='fl-scrollable-inner'></div></div>"}),fluid.demands("fluid.scrollableTable","fluid.uploader.fileQueueView",{container:"{fileQueueView}.container"})}(jQuery,fluid_1_5);