// Override Bootstrap's Sass default variables
//
// Nearly all variables in Bootstrap are written with the `!default` flag.
// This allows you to override the default values of those variables before
// you import Bootstrap's source Sass files.
//
// Overriding the default variable values is the best way to customize your
// CSS without writing _new_ styles. For example, change you can either change
// `$body-color` or write more CSS that override's Bootstrap's CSS like so:
// `body { color: red; }`.

//
// Bring in Bootstrap
//

// Option 1
//
// Import all of Bootstrap's CSS

// @import "bootstrap/scss/bootstrap";

// Option 2
//
// Place variable overrides first, then import just the styles you need. Note that some stylesheets are required no matter what.

// Toggle global options
$enable-gradients: false;
$enable-shadows: true;
$enable-cssgrid: true;

$offcanvas-box-shadow: 0 1rem 3rem rgba(0, 0, 0, 0.175);

// Customize some defaults
$primary: #003a6b;
$body-color: #333;
$body-bg: #fff;
$border-radius: 0.4rem;
$success: #7952b3;

// Configuration
@import "bootstrap/scss/functions";
@import "bootstrap/scss/variables";
@import "bootstrap/scss/mixins";
@import "bootstrap/scss/utilities";

// Layout & components
@import "bootstrap/scss/root";
@import "bootstrap/scss/reboot";
@import "bootstrap/scss/type";
@import "bootstrap/scss/images";
@import "bootstrap/scss/containers";
@import "bootstrap/scss/grid";
@import "bootstrap/scss/tables";
@import "bootstrap/scss/forms";
@import "bootstrap/scss/buttons";
@import "bootstrap/scss/transitions";
@import "bootstrap/scss/dropdown";
@import "bootstrap/scss/button-group";
@import "bootstrap/scss/nav";
@import "bootstrap/scss/navbar";
@import "bootstrap/scss/card";
@import "bootstrap/scss/accordion";
@import "bootstrap/scss/breadcrumb";
@import "bootstrap/scss/pagination";
@import "bootstrap/scss/badge";
@import "bootstrap/scss/alert";
@import "bootstrap/scss/progress";
@import "bootstrap/scss/list-group";
@import "bootstrap/scss/close";
@import "bootstrap/scss/toasts";
@import "bootstrap/scss/modal";
@import "bootstrap/scss/tooltip";
@import "bootstrap/scss/popover";
@import "bootstrap/scss/carousel";
@import "bootstrap/scss/spinners";
@import "bootstrap/scss/offcanvas";
@import "bootstrap/scss/placeholders";

// Helpers
@import "bootstrap/scss/helpers";

// Utilities
@import "bootstrap/scss/utilities/api";

// Libraries
// Tabulator Configuration for sui-table
/* stylelint-disable scss/dollar-variable-pattern */
@import "tabulator-tables/src/scss/themes/bootstrap/tabulator_bootstrap5";

/* stylelint-enable scss/dollar-variable-pattern */

//
// Custom styles
//

@import "icon-list";

body {
  //padding: 1.5rem;
}

//
// Custom styles that need to be relocated
//
:root {
  --sakai-navSidebar: 16rem;
  --sakai-headerHeight: 4rem;
}
.sakai-portalContainer {
  display: grid;
  grid-template-columns: auto;
  grid-template-rows: var(--sakai-headerHeight) auto var(--sakai-headerHeight);
  grid-template-areas: "header" "main" "mobilebar";
}
@include media-breakpoint-up(md) {
  .sakai-portalContainer {
    display: grid;
    grid-template-columns: var(--sakai-navSidebar) auto;
    grid-template-rows: var(--sakai-headerHeight) auto;
    grid-template-areas: "header header" "toolbar main";
  }
  .sakai-navSidebar.sakai-navSidebar {
    visibility: visible;
    box-shadow: none;
    transform: none;
  }
}
.sakai-topHeader {
  grid-area: header;
  z-index: 1050;
  box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12);
}
.sakai-navSidebar {
  grid-area: toolbar;
  top: var(--sakai-headerHeight);
  width: var(--sakai-navSidebar);
  height: calc(100vh - var(--sakai-headerHeight) - var(--sakai-headerHeight));  //in narrow views, there are fixed top and bottom bars of headerHeight height
}
@include media-breakpoint-up(md) {
  .sakai-navSidebar {
    height: calc(100vh - var(--sakai-headerHeight));
  }
}
.sakai-mainContent {
  grid-area: main;
  min-height: calc(100vh - var(--sakai-headerHeight));
}
.sakai-mobileBar {
  grid-area: mobilebar;
  position: sticky;
  bottom: 0;
  z-index: 1050;
}
.sakai-jumpLinks {
  padding-left: var(--sakai-navSidebar);
}
.sakai-jumpLinks a {
  color: #fff;
}
.sakai-headerLogo {
  height: var(--sakai-headerHeight);
}
@include media-breakpoint-up(md) {
  .sakai-headerLogo {
    width: var(--sakai-navSidebar);
  }
}
.sakai-headerLogo img {
  max-height: 3rem;
}
.sakai-newNotificationsIndicator {
  position: absolute;
  top: 0;
  right: 20%;
}
// make offcanvas header match Sakai's header:
.offcanvas-header {
  flex-shrink: 0;
  height: var(--sakai-headerHeight);
  color: #fff;
  background-color: var(--bs-primary);
}
// change offcanvas close button's colour to white:
.offcanvas-header .btn-close {
  background: transparent url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%23fff'%3e%3cpath d='M.293.293a1 1 0 011.414 0L8 6.586 14.293.293a1 1 0 111.414 1.414L9.414 8l6.293 6.293a1 1 0 01-1.414 1.414L8 9.414l-6.293 6.293a1 1 0 01-1.414-1.414L6.586 8 .293 1.707a1 1 0 010-1.414z'/%3e%3c/svg%3e") center/1em auto no-repeat;
}
// for narrow views, take up the full width of the screen:
@media (max-width: $offcanvas-horizontal-width) {
  .offcanvas-start,
  .offcanvas-end {
    max-width: 100vw;
  }
}
@include media-breakpoint-down(md) {
  .offcanvas-start,
  .offcanvas-end {
    bottom: var(--sakai-headerHeight);
  }
}
.sakai-sitesAndToolsNav {
  height: 100%;
  overflow-y: auto;
  overscroll-behavior: contain; // prevent the whole page scrolling when scrolling past the bottom of the sites and tools list
}
.sakai-sitesAndToolsNav .active .list-group-item-action {
  font-weight: 700;
  color: #fff;
}
.sakai-footer .nav-link {
  padding-top: 0;
  padding-bottom: 0;
}

sui-button sui-icon {
  margin-right: 0.25em;
}

sui-table {
  .item-text {
    min-width: 4em;
  }

  .row-actions-list {
    margin-top: -8px;
  }

  /* !important to override poorly written selector in dependency */
  /* stylelint-disable declaration-no-important */
  .tabulator-selectable:hover {
    cursor: auto !important;
  }

  .tabulator-selected:hover {
    cursor: auto !important;
  }

  .tabulator-row .tabulator-cell:first-child {
    cursor: pointer !important;
  }
  .tabulator.table .tabulator-row:hover {
    background-color: $table-hover-bg;
  }
  .tabulator.table .tabulator-row:hover .tabulator-cell {
    background-color: transparent;
  }
  /* stylelint-enable declaration-no-important */
}

//
// Temporary Styles for Morpheus to Trinity conversion
//

.Mrphs-pagebody {
  width: 100%;
}
.navIntraTool {
  display: flex;
  flex-wrap: wrap;
  padding-left: 0;
  list-style: none;

  li {
    margin-right: 1em;
  }
}
