$colorPalette: ();

@each $name, $value in $theme-colors {
  $colorPalette: map-merge($colorPalette, defineColorHEX($name, $value));
}

@each $name, $value in $colorPalette {
    .#{$name} {
        @include sakai-colorize($name, $colorPalette: $colorPalette);
    }
}
// @include sakai-colorize-all($colorPalette);
:root {
  --sakai-theme-switch-ease: background-color 0.6s cubic-bezier(0.76, 0, 0.24, 1);
  @include generateCSSProps($colorPalette);
}
@debug colorPalette, length($colorPalette), nth(map-keys($colorPalette),length($colorPalette)), map-get($colorPalette, nth(map-keys($colorPalette),length($colorPalette)));
@debug theme-colors, length($theme-colors), nth(map-keys($theme-colors),length($theme-colors)), map-get($theme-colors, nth(map-keys($theme-colors),length($theme-colors)));

