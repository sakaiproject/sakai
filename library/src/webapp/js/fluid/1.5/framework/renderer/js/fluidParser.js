fluid_1_5=fluid_1_5||{},function($,fluid){"use strict";fluid.parseTemplate=function(template,baseURL,scanStart,cutpoints_in,opts){function isSimpleClassCutpoint(tree){return 1===tree.length&&1===tree[0].predList.length&&tree[0].predList[0].clazz}function init(baseURLin,debugModeIn,cutpointsIn){if(t.rootlump=XMLLump(0,-1),tagstack=[t.rootlump],lumpindex=0,nestingdepth=0,justended=!1,defstart=-1,defend=-1,baseURL=baseURLin,debugMode=debugModeIn,cutpointsIn)for(var i=0;i<cutpointsIn.length;++i){var tree=fluid.parseSelector(cutpointsIn[i].selector,fluid.simpleCSSMatcher),clazz=isSimpleClassCutpoint(tree);clazz?simpleClassCutpoints[clazz]=cutpointsIn[i].id:(cutstatus.push([]),cutpoints.push($.extend({},cutpointsIn[i],{tree:tree})))}}function findTopContainer(){for(var i=tagstack.length-1;i>=0;--i){var lump=tagstack[i];if(void 0!==lump.rsfID)return lump}return t.rootlump}function newLump(){var togo=XMLLump(lumpindex,nestingdepth);return debugMode&&(togo.line=parser.getLineNumber(),togo.column=parser.getColumnNumber()),t.lumps[lumpindex]=togo,++lumpindex,togo}function addLump(mmap,ID,lump){var list=mmap[ID];list||(list=[],mmap[ID]=list),list[list.length]=lump}function checkContribute(ID,lump){if(-1!==ID.indexOf("scr=contribute-")){var scr=ID.substring("scr=contribute-".length);addLump(t.collectmap,scr,lump)}}function debugLump(lump){return"<"+lump.tagname+">"}function hasCssClass(clazz,totest){return totest?-1!==(" "+totest+" ").indexOf(" "+clazz+" "):!1}function matchNode(term,headlump,headclazz){if(term.predList){for(var i=0;i<term.predList.length;++i){var pred=term.predList[i];if(pred.id&&headlump.attributemap.id!==pred.id)return!1;if(pred.clazz&&!hasCssClass(pred.clazz,headclazz))return!1;if(pred.tag&&headlump.tagname!==pred.tag)return!1}return!0}}function tagStartCut(headlump){var togo,i,headclazz=headlump.attributemap["class"];if(headclazz){var split=headclazz.split(" ");for(i=0;i<split.length;++i){var simpleCut=simpleClassCutpoints[$.trim(split[i])];if(simpleCut)return simpleCut}}for(i=0;i<cutpoints.length;++i){var cut=cutpoints[i],cutstat=cutstatus[i],nextterm=cutstat.length;if(nextterm<cut.tree.length){var term=cut.tree[nextterm];if(nextterm>0&&cut.tree[nextterm-1].child&&cutstat[nextterm-1]!==headlump.nestingdepth-1)continue;var isMatch=matchNode(term,headlump,headclazz);isMatch&&(cutstat[cutstat.length]=headlump.nestingdepth,cutstat.length===cut.tree.length&&(void 0!==togo&&fluid.fail("Cutpoint specification error - node "+debugLump(headlump)+" has already matched with rsf:id of "+togo),(void 0===cut.id||null===cut.id)&&fluid.fail("Error in cutpoints list - entry at position "+i+" does not have an id set"),togo=cut.id))}}return togo}function tagEndCut(){if(cutpoints)for(var i=0;i<cutpoints.length;++i){var cutstat=cutstatus[i];cutstat.length>0&&cutstat[cutstat.length-1]===nestingdepth&&cutstat.length--}}function processTagEnd(){tagEndCut();var endlump=newLump();--nestingdepth,endlump.text="</"+parser.getName()+">";var oldtop=tagstack[tagstack.length-1];oldtop.close_tag=t.lumps[lumpindex-1],tagstack.length--,justended=!0}function processTagStart(isempty){if(++nestingdepth,justended){justended=!1;var backlump=newLump();backlump.nestingdepth--}-1===t.firstdocumentindex&&(t.firstdocumentindex=lumpindex);var headlump=newLump(),stacktop=tagstack[tagstack.length-1];headlump.uplump=stacktop;var tagname=parser.getName();headlump.tagname=tagname;var attrs=headlump.attributemap=parser.m_attributes,ID=attrs[fluid.ID_ATTRIBUTE];void 0===ID&&(ID=tagStartCut(headlump));for(var attrname in attrs)void 0===ID&&(/href|src|codebase|action/.test(attrname)?ID="scr=rewrite-url":void 0===ID&&/for|headers/.test(attrname)&&(ID="scr=null"));if(ID){126===ID.charCodeAt(0)&&(ID=ID.substring(1),headlump.elide=!0),checkContribute(ID,headlump),headlump.rsfID=ID;var downreg=findTopContainer();for(downreg.downmap||(downreg.downmap={});downreg;)downreg.downmap&&addLump(downreg.downmap,ID,headlump),downreg=downreg.uplump;addLump(t.globalmap,ID,headlump);var colpos=ID.indexOf(":");if(-1!==colpos){var prefix=ID.substring(0,colpos);stacktop.finallump||(stacktop.finallump={}),stacktop.finallump[prefix]=headlump}}headlump.text="<"+tagname+fluid.dumpAttributes(attrs)+(isempty&&!ID?"/>":">"),tagstack[tagstack.length]=headlump,isempty&&(ID?processTagEnd():(--nestingdepth,tagstack.length--))}function processDefaultTag(){if(-1!==defstart){-1===t.firstdocumentindex&&(t.firstdocumentindex=lumpindex);var text=parser.getContent().substr(defstart,defend-defstart);justended=!1;var newlump=newLump();newlump.text=text,defstart=-1}}opts=opts||{},template||fluid.fail("empty template supplied to fluid.parseTemplate");var t,parser,tagstack,lumpindex=0,nestingdepth=0,justended=!1,defstart=-1,defend=-1,debugMode=!1,cutpoints=[],simpleClassCutpoints={},cutstatus=[],XMLLump=function(lumpindex,nestingdepth){return{nestingdepth:nestingdepth,lumpindex:lumpindex,parent:t}};t=fluid.XMLViewTemplate(),init(baseURL,opts.debugMode,cutpoints_in);var idpos=template.indexOf(fluid.ID_ATTRIBUTE);if(scanStart){var brackpos=template.indexOf(">",idpos);parser=fluid.XMLP(template.substring(brackpos+1))}else parser=fluid.XMLP(template);parseloop:for(;;){var iEvent=parser.next();switch(iEvent){case fluid.XMLP._ELM_B:processDefaultTag(),processTagStart(!1,"");break;case fluid.XMLP._ELM_E:processDefaultTag(),processTagEnd();break;case fluid.XMLP._ELM_EMP:processDefaultTag(),processTagStart(!0,"");break;case fluid.XMLP._PI:case fluid.XMLP._DTD:defstart=-1;continue;case fluid.XMLP._TEXT:case fluid.XMLP._ENTITY:case fluid.XMLP._CDATA:case fluid.XMLP._COMMENT:-1===defstart&&(defstart=parser.m_cB),defend=parser.m_cE;break;case fluid.XMLP._ERROR:fluid.setLogging(!0);var message="Error parsing template: "+parser.m_cAlt+" at line "+parser.getLineNumber();fluid.log(message),fluid.log("Just read: "+parser.m_xml.substring(parser.m_iP-30,parser.m_iP)),fluid.log("Still to read: "+parser.m_xml.substring(parser.m_iP,parser.m_iP+30)),fluid.fail(message);break parseloop;case fluid.XMLP._NONE:break parseloop}}processDefaultTag();var excess=tagstack.length-1;return excess&&fluid.fail("Error parsing template - unclosed tag(s) of depth "+excess+": "+fluid.transform(tagstack.splice(1,excess),function(lump){return debugLump(lump)}).join(", ")),t},fluid.debugLump=function(lump){var togo=lump.text;return togo+=" at ",togo+="lump line "+lump.line+" column "+lump.column+" index "+lump.lumpindex,togo+=null===lump.parent.href?"":" in file "+lump.parent.href},fluid.ID_ATTRIBUTE="rsf:id",fluid.getPrefix=function(id){var colpos=id.indexOf(":");return-1===colpos?id:id.substring(0,colpos)},fluid.SplitID=function(id){var that={},colpos=id.indexOf(":");return-1===colpos?that.prefix=id:(that.prefix=id.substring(0,colpos),that.suffix=id.substring(colpos+1)),that},fluid.XMLViewTemplate=function(){return{globalmap:{},collectmap:{},lumps:[],firstdocumentindex:-1}},fluid.XMLEncode=function(text){return text.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/\"/g,"&quot;")},fluid.dumpAttributes=function(attrcopy){var togo="";for(var attrname in attrcopy){var attrvalue=attrcopy[attrname];null!==attrvalue&&void 0!==attrvalue&&(togo+=" "+attrname+'="'+attrvalue+'"')}return togo},fluid.aggregateMMap=function(target,source){for(var key in source){var targhas=target[key];targhas||(target[key]=[]),target[key]=target[key].concat(source[key])}},fluid.parseTemplates=function(resourceSpec,templateList,opts){var togo=[];opts=opts||{},togo.globalmap={};for(var i=0;i<templateList.length;++i){var resource=resourceSpec[templateList[i]],lastslash=resource.href.lastIndexOf("/"),baseURL=-1===lastslash?"":resource.href.substring(0,lastslash+1),template=fluid.parseTemplate(resource.resourceText,baseURL,opts.scanStart&&0===i,resource.cutpoints,opts);0===i&&fluid.aggregateMMap(togo.globalmap,template.globalmap),template.href=resource.href,template.baseURL=baseURL,template.resourceKey=resource.resourceKey,togo[i]=template,fluid.aggregateMMap(togo.globalmap,template.rootlump.downmap)}return togo}}(jQuery,fluid_1_5);