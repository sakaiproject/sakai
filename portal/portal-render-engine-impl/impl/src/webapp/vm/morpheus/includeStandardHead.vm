## Standard Header used by all portal views
## Don't put anything before the <!DOCTYPE or it breaks IE9
## DOCTYPE detection and puts it in quirks mode.
<!DOCTYPE html>
<html lang="$!{locale}" dir="$!{dir}" class="Mrphs-html $!{userTheme}">
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">

        <script> ## Include this at the top so tool markup and headscripts.js can use it
            ## SAK-16484 Allow Javascript to easily get at user details.
            ## SAK-13987, SAK-16162, SAK-19132 - Portal Logout Timer
            var portal = {
                "bullhorns": {
                    "enabled": $!{useBullhornAlerts},
                    #if ($useBullhornAlerts)
                    "pollInterval": $!{bullhornsPollInterval}
                    #end
                },
                "chat": {
                    "enabled": $!{neoChat},
                    "pollInterval": $!{portalChatPollInterval},
                    "video" : {
                        "enabled": $!{neoChatVideo}
                    }
                },
                "i18n": {},
                "loggedIn": $!{loggedIn},
                "portalPath": "$!{portalPath}",
                "loggedOutUrl": "$!{loggedOutUrl}",
                "siteId": "$!{siteId}",
                "siteTitle": "$!{siteTitle}",
                "shortDescription" : "$!{shortDescription}",
                "toolsCollapsed": #if ($toolsCollapsed) true #else false #end,
                "locale": "$!{locale}" || "en-US",
                "serverTimeMillis": "$!{serverTimeMillis}",
                "user": {
                    "id": "$!{userId}",
                    "eid": "$!{userEid}",
                    "userType": "$!{userType}",
                    "siteRole": "$!{userSiteRole}",
                    "impersonatorDisplayId": "$!{impersonatorDisplayId}",
                    "iso8601Timestamp": "$!{userISO8601Timestamp}",
                    "timezone": "$!{userTimezone}",
                    "offsetFromServerMillis": "$!{userTimezoneOffsetMillis}"
                },
                "timeoutDialog" : {
                "enabled": $!{timeoutDialogEnabled},
                "seconds": $!{timeoutDialogWarningSeconds}
                },
                "toggle" : {
                    "allowauto": false,
                    "tools": false,
                    "sitenav": false // This is not allowed in morpheus
                },
                "pageScriptPath" : "$!{pageScriptPath}",
                "editor" : {
                    "type": "$!{editorType}",
                },
                "portalCDNQuery" : "$!{portalCDNQuery}",
                "userTheme" : "$!{userTheme}"
                #if ($themesAutoDetectDark)
                ,"userThemeAutoDetectDark" : true
                #end
            };
        </script>

        #parse("/vm/morpheus/snippets/title-snippet.vm")
        #parse("/vm/morpheus/snippets/portalCSS-snippet.vm")
        
        <link href="${pageWebjarsPath}jquery-ui/1.12.1/jquery-ui.min.css$!{portalCDNQuery}" rel="stylesheet" />  
        <link href="${pageScriptPath}jquery/cluetip/1.2.10/css/jquery.cluetip.css$!{portalCDNQuery}" rel="stylesheet">
        <link href="${pageWebjarsPath}qtip2/3.0.3-1/jquery.qtip.min.css$!{portalCDNQuery}" rel="stylesheet">
        <link href="${pageWebjarsPath}cropper/4.1.0/dist/cropper.min.css$!{portalCDNQuery}" rel="stylesheet">
        <link href="${pageWebjarsPath}fontawesome/4.7.0/css/font-awesome.min.css$!{portalCDNQuery}" rel="stylesheet">
        <script src="${pageSkinRepo}/${pageSkin}/js/lib/modernizr.js$!{portalCDNQuery}"></script>
        <script src="/library/js/sakai-message-broker.js$!{portalCDNQuery}"></script>
        <script src="/webcomponents/assets/@webcomponents/webcomponentsjs/webcomponents-loader.js$!{portalCDNQuery}"></script>
        <script src="${pageWebjarsPath}momentjs/2.29.1/min/moment-with-locales.min.js$!{portalCDNQuery}"></script>
        <script>
            moment.locale(window.portal.locale);
        </script>
    #if ($useBullhornAlerts)
        <script src="/profile2-tool/javascript/profile2-eb.js$!{portalCDNQuery}"></script>
    #end
        
        <!-- inlined tool header contribution -->
        ## if any of the tools requested an inline render, their header content gets aggregated here
        #foreach ( $tool in $pageColumn0Tools )
        	#if (${tool.hasRenderResult})
        		${tool.toolRenderResult.getHead()}
        	#end
        #end
        #foreach ( $tool in $pageColumn1Tools )
        	#if (${tool.hasRenderResult})
        		${tool.toolRenderResult.getHead()}
        	#end
        #end
        <!-- end inlined tool header contribution -->

        #parse("/vm/morpheus/includeGoogleTM-Script.vm")
        #if ($faviconURL && !$faviconURL.empty)
                <link rel="icon" href="$!{faviconURL}" type="image/x-icon">
        #end
<script>
var _Sakai_LTI_Iframes = [];
window.addEventListener('message', function (e) {
    var outer_href = window.location.href;
    var origin = e.origin;
    var same_origin = outer_href.startsWith(origin);
    var approved = false;
    var element_id = false;

    console.log('Portal Listener', outer_href, origin, (same_origin ? 'origin match' : 'origin mismatch'));

    // https://stackoverflow.com/questions/15329710/postmessage-source-iframe
    Array.prototype.forEach.call(document.getElementsByTagName('iframe'), function (element) {
      if (element.contentWindow === e.source) {
        // console.log('source element', element);
        event_id = element.getAttributeNode("id");
        if ( event_id ) event_id = event_id.value;
      }
    });

    if ( ! event_id ) {
        console.log('Message from frame without id', e.source, origin);
        console.log(e);
        return;
    }

    approved = _Sakai_LTI_Iframes.includes(event_id);
    console.log('id', event_id, (approved ? 'approved' : 'not approved'));
    // console.log(_Sakai_LTI_Iframes);
    // console.log(e);

    var message = e.data;
    if ( typeof message == 'string' ) message = JSON.parse(message)
    console.log(message);

    switch (message.subject) {
        case 'org.imsglobal.lti.prelaunch':
            if ( same_origin ) {
                _Sakai_LTI_Iframes.push(event_id);
                console.log('org.imsglobal.lti.prelaunch from same origin', origin, 'frame approved', event_id);
            } else {
                console.log('org.imsglobal.lti.prelaunch must come from same origin, not', origin);
            }
            break;
        case 'org.imsglobal.lti.postverify':
            if ( approved ) {
                console.log('postverify from approved frame', event_id);
                // TODO: Verify we like this URL - don't just AJAX anywhere
                var url = message.postverify;
                ${d}PBJQ.ajax({
                    url: url,
                    cache: false,
                 })
                .done(function( data ) {
                    // https://stackoverflow.com/questions/61548354/how-to-postmessage-into-iframe
                    console.log('PostVerify complete - sending org.imsglobal.lti.close');
                    document.getElementById(event_id).contentWindow.postMessage(JSON.stringify({subject:'org.imsglobal.lti.close'}), '*');
                });
            } else {
                console.log('org.imsglobal.lti.prelaunch must come from approved frame, not', origin);
            }
            break;
        case 'org.imsglobal.lti.sessionStorage.setItem':
            if ( approved ) {
                console.log('sessionStorage.setItem from approved frame', event_id);
                var key = event_id + message.key;
                window.sessionStorage.setItem(key, message.value);
            }
            break;
        case 'org.imsglobal.lti.sessionStorage.getItem':
            if ( approved ) {
                console.log('sessionStorage.getItem from approved frame', event_id);
                var key = event_id + message.key;
                var value = window.sessionStorage.getItem(key);
                var response = new Object();
                response.key = message.key;
                response.subject = message.subject;
                response.value = value;
                document.getElementById(event_id).contentWindow.postMessage(JSON.stringify(response), '*');
            }
            break;
        case 'org.imsglobal.lti.sessionStorage.removeItem':
            if ( approved ) {
                console.log('sessionStorage.removeItem from approved frame', event_id);
                var key = event_id + message.key;
                window.sessionStorage.removeItem(key, message.value);
            }
            break;
        case 'org.imsglobal.lti.sessionStorage.clear':
            if ( approved ) {
                console.log('sessionStorage.clear from approved frame', event_id);
                var key = event_id + message.key;
                for (var i = 0; i < localStorage.length; i++) {
                    var key = localStorage.key(i);
                    console.log('key', key);
                    if ( ! key.startsWith(key) ) continue;
                    console.log('removing', key);
                    window.sessionStorage.removeItem(key);
                }
            }
            break;
        case 'lti.frameResize':
            if ( approved ) {
                console.log('frameResize from approved frame', event_id);
            } else {
                console.log('frameResize must come from approved frame, not', origin);
            }
            break;
    }
});
</script>

    </head>
