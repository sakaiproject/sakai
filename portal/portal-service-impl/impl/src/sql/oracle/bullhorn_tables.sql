CREATE TABLE SOCIAL_ALERTS
(
    ID NUMBER(19) NOT NULL,
    FROM_USER VARCHAR2(99) NOT NULL,
    TO_USER VARCHAR2(99) NOT NULL,
    EVENT VARCHAR2(32) NOT NULL,
    REF VARCHAR2(255) NOT NULL,
    TITLE VARCHAR2(255),
    SITE_ID VARCHAR2(99),
    URL CLOB NOT NULL,
    EVENT_DATE TIMESTAMP NOT NULL,
    PRIMARY KEY(ID)
);

CREATE SEQUENCE social_alerts_seq;

CREATE OR REPLACE TRIGGER social_alerts_bir
BEFORE INSERT ON SOCIAL_ALERTS
FOR EACH ROW

BEGIN
      SELECT social_alerts_seq.NEXTVAL
      INTO   :new.id
      FROM   dual;
END;
/

CREATE TABLE ACADEMIC_ALERTS
(
    ID NUMBER(19) NOT NULL,
    FROM_USER VARCHAR2(99) NOT NULL,
    TO_USER VARCHAR2(99) NOT NULL,
    EVENT VARCHAR2(32) NOT NULL,
    REF VARCHAR2(255) NOT NULL,
    TITLE VARCHAR2(255) NOT NULL,
    SITE_ID VARCHAR2(99),
    URL CLOB NOT NULL,
    EVENT_DATE TIMESTAMP NOT NULL,
    PRIMARY KEY(ID)
);

CREATE SEQUENCE academic_alerts_seq;

CREATE OR REPLACE TRIGGER academic_alerts_bir
BEFORE INSERT ON ACADEMIC_ALERTS
FOR EACH ROW

BEGIN
      SELECT academic_alerts_seq.NEXTVAL
      INTO   :new.id
      FROM   dual;
END;
/
