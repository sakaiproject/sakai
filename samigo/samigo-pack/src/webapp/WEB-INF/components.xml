<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<bean id="org_sakaiproject_tool_assessment_services_samlite_SamLiteService"
		class="org.sakaiproject.tool.assessment.samlite.impl.SamLiteServiceImpl"
		init-method="init"/>
		
	<bean id="org.sakaiproject.tool.assessment.shared.api.questionpool.QuestionPoolServiceAPI"
		class="org.sakaiproject.tool.assessment.shared.impl.questionpool.QuestionPoolServiceImpl"
		scope="singleton"/>

  <bean id="org.sakaiproject.springframework.orm.hibernate.impl.AdditionalHibernateMappingsImpl.samigo"
        class="org.sakaiproject.springframework.orm.hibernate.impl.AdditionalHibernateMappingsImpl">
    <property name="mappingResources">
      <list>
        <value>org/sakaiproject/tool/assessment/data/dao/assessment/AssessmentBase.hbm.xml</value>
        <value>org/sakaiproject/tool/assessment/data/dao/assessment/ItemData.hbm.xml</value>
        <value>org/sakaiproject/tool/assessment/data/dao/shared/TypeData.hbm.xml</value>
        <value>org/sakaiproject/tool/assessment/data/dao/questionpool/QuestionPoolData.hbm.xml</value>
        <value>org/sakaiproject/tool/assessment/data/dao/assessment/PublishedAssessment.hbm.xml</value>
        <value>org/sakaiproject/tool/assessment/data/dao/assessment/PublishedItemData.hbm.xml</value>
        <value>org/sakaiproject/tool/assessment/data/dao/grading/GradingData.hbm.xml</value>
        <value>org/sakaiproject/tool/assessment/data/dao/grading/MediaData.hbm.xml</value>
        <value>org/sakaiproject/tool/assessment/data/dao/authz/AuthorizationData.hbm.xml</value>
        <value>org/sakaiproject/tool/assessment/data/dao/assessment/FavoriteColChoices.hbm.xml</value>
        <value>org/sakaiproject/tool/assessment/data/dao/assessment/ExtendedTime.hbm.xml</value>
      </list>
    </property>
  </bean>
  
  <bean id="persistenceHelper" class="org.sakaiproject.tool.assessment.services.PersistenceHelper">
  	<property name="deadlockInterval"><value>3500</value></property>
  	<property name="retryCount"><value>5</value></property>
  </bean>

   <bean id="PersistenceService"
        class="org.sakaiproject.tool.assessment.services.PersistenceService">
     
     <property name="persistenceHelper" ref="persistenceHelper"/>
     <property name="typeFacadeQueries"> <ref bean="TypeFacadeQueries" /> </property>
     <property name="questionPoolFacadeQueries"><ref bean="QuestionPoolFacadeQueries" /> </property>
     <property name="sectionFacadeQueries"> <ref bean="SectionFacadeQueries" /> </property>
     <property name="itemFacadeQueries"><ref bean="ItemFacadeQueries" /></property>
     <property name="assessmentFacadeQueries"><ref bean="AssessmentFacadeQueries" /></property>
     <property name="publishedAssessmentFacadeQueries"><ref bean="PublishedAssessmentFacadeQueries" /></property>
     <property name="publishedSectionFacadeQueries"><ref bean="PublishedSectionFacadeQueries" /></property>
     <property name="publishedItemFacadeQueries"><ref bean="PublishedItemFacadeQueries" /></property>
     <property name="assessmentGradingFacadeQueries"><ref bean="AssessmentGradingFacadeQueries" /></property>
     <property name="autoSubmitQueries"><ref bean="AutoSubmitQueries" /></property>
     <property name="authorizationFacadeQueries"><ref bean="AuthorizationFacadeQueries" /></property>
     <property name="pagingUtilQueries"><ref bean="PagingUtilQueries" /></property>
     <property name="authzQueriesFacade"><ref bean="AuthzQueriesFacade" /></property>
     <property name="favoriteColChoicesFacadeQueries"><ref bean ="FavoriteColChoicesFacadeQueries"/></property>
     <property name="sectionAwareness" ><ref bean="org.sakaiproject.section.api.SectionAwareness"/></property>
     <property name="eventLogFacadeQueries" ><ref bean="EventLogFacadeQueries"/></property>
     <property name="extendedTimeFacade" ref="org.sakaiproject.tool.assessment.facade.ExtendedTimeFacade" />
   </bean>
    
   <bean id="TypeFacadeQueries"
         class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
      <property name="transactionManager"><ref bean="org.sakaiproject.springframework.orm.hibernate.GlobalTransactionManager"/></property>
      <property name="target">
        <bean class="org.sakaiproject.tool.assessment.facade.TypeFacadeQueries">
          <property name="sessionFactory"><ref bean="org.sakaiproject.springframework.orm.hibernate.GlobalSessionFactory"/></property>
	</bean>
      </property>
      <property name="transactionAttributes">
        <props>
          <prop key="get*">PROPAGATION_REQUIRED,readOnly</prop> 
          <prop key="load*">PROPAGATION_REQUIRED,readOnly</prop> 
          <prop key="*">PROPAGATION_REQUIRED</prop>
        </props>
      </property>
    </bean>

    <bean id="QuestionPoolFacadeQueries"
          class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
      <property name="transactionManager"><ref bean="org.sakaiproject.springframework.orm.hibernate.GlobalTransactionManager"/></property>
      <property name="target">
        <bean class="org.sakaiproject.tool.assessment.facade.QuestionPoolFacadeQueries">
          <property name="sessionFactory"><ref bean="org.sakaiproject.springframework.orm.hibernate.GlobalSessionFactory"/></property>
	</bean>
      </property>
      <property name="transactionAttributes">
        <props>
          <prop key="*">PROPAGATION_REQUIRED</prop>
        </props>
      </property>
    </bean>

    <bean id="ItemFacadeQueries"
          class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
      <property name="transactionManager"><ref bean="org.sakaiproject.springframework.orm.hibernate.GlobalTransactionManager"/></property>
      <property name="target">
        <bean class="org.sakaiproject.tool.assessment.facade.ItemFacadeQueries">
          <property name="sessionFactory"><ref bean="org.sakaiproject.springframework.orm.hibernate.GlobalSessionFactory"/></property>
            <property name="itemHashUtil" ref="org.sakaiproject.tool.assessment.facade.ItemHashUtil" />
	    </bean>
      </property>
      <property name="transactionAttributes">
        <props>
          <prop key="*">PROPAGATION_REQUIRED</prop>
          <!-- this method batches internally, so manages own transactions. -->
          <prop key="backfillItemHashes">PROPAGATION_NEVER</prop>
        </props>
      </property>
    </bean>

    <bean id="AssessmentFacadeQueries"
          class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
      <property name="transactionManager"><ref bean="org.sakaiproject.springframework.orm.hibernate.GlobalTransactionManager"/></property>
      <property name="target">
        <bean class="org.sakaiproject.tool.assessment.facade.AssessmentFacadeQueries">
          <property name="sessionFactory"><ref bean="org.sakaiproject.springframework.orm.hibernate.GlobalSessionFactory"/></property>
	</bean>
      </property>
      <property name="transactionAttributes">
        <props>
          <prop key="*">PROPAGATION_REQUIRED</prop>
        </props>
      </property>
    </bean>
    
      <bean id="EventLogFacadeQueries"
          class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
      <property name="transactionManager"><ref bean="org.sakaiproject.springframework.orm.hibernate.GlobalTransactionManager"/></property>
      <property name="target">
        <bean class="org.sakaiproject.tool.assessment.facade.EventLogFacadeQueries">
          <property name="sessionFactory"><ref bean="org.sakaiproject.springframework.orm.hibernate.GlobalSessionFactory"/></property>
	</bean>
      </property>
      <property name="transactionAttributes">
        <props>
          <prop key="*">PROPAGATION_REQUIRED</prop>
        </props>
      </property>
    </bean>

    <bean id="SectionFacadeQueries"
          class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
      <property name="transactionManager"><ref bean="org.sakaiproject.springframework.orm.hibernate.GlobalTransactionManager"/></property>
      <property name="target">
        <bean class="org.sakaiproject.tool.assessment.facade.SectionFacadeQueries">
          <property name="sessionFactory"><ref bean="org.sakaiproject.springframework.orm.hibernate.GlobalSessionFactory"/></property>
	</bean>
      </property>
      <property name="transactionAttributes">
        <props>
          <prop key="*">PROPAGATION_REQUIRED</prop>
        </props>
      </property>
    </bean>

    <bean id="PublishedAssessmentFacadeQueries"
          class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
      <property name="transactionManager"><ref bean="org.sakaiproject.springframework.orm.hibernate.GlobalTransactionManager"/></property>
      <property name="target">
        <bean class="org.sakaiproject.tool.assessment.facade.PublishedAssessmentFacadeQueries">
          <property name="sessionFactory" ref="org.sakaiproject.springframework.orm.hibernate.GlobalSessionFactory"/>
          <property name="securityService" ref="org.sakaiproject.authz.api.SecurityService" />
          <property name="siteService" ref="org.sakaiproject.site.api.SiteService"/>
	    </bean>
      </property>
      <property name="transactionAttributes">
        <props>
          <prop key="*">PROPAGATION_REQUIRED</prop>
        </props>
      </property>
    </bean>

    <bean id="PublishedSectionFacadeQueries"
          class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
      <property name="transactionManager"><ref bean="org.sakaiproject.springframework.orm.hibernate.GlobalTransactionManager"/></property>
      <property name="target">
        <bean class="org.sakaiproject.tool.assessment.facade.PublishedSectionFacadeQueries">
          <property name="sessionFactory"><ref bean="org.sakaiproject.springframework.orm.hibernate.GlobalSessionFactory"/></property>
	</bean>
      </property>
      <property name="transactionAttributes">
        <props>
          <prop key="*">PROPAGATION_REQUIRED</prop>
        </props>
      </property>
    </bean>

    <bean id="PublishedItemFacadeQueries"
          class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
      <property name="transactionManager"><ref bean="org.sakaiproject.springframework.orm.hibernate.GlobalTransactionManager"/></property>
      <property name="target">
        <bean class="org.sakaiproject.tool.assessment.facade.PublishedItemFacadeQueries">
          <property name="sessionFactory"><ref bean="org.sakaiproject.springframework.orm.hibernate.GlobalSessionFactory"/></property>
          <property name="itemHashUtil" ref="org.sakaiproject.tool.assessment.facade.ItemHashUtil" />
	</bean>
      </property>
      <property name="transactionAttributes">
        <props>
          <prop key="*">PROPAGATION_REQUIRED</prop>
          <!-- this method batches internally, so manages own transactions. -->
          <prop key="backfillItemHashes">PROPAGATION_NEVER</prop>
        </props>
      </property>
    </bean>

    <bean id="org.sakaiproject.tool.assessment.facade.ItemHashUtil"
          class="org.sakaiproject.tool.assessment.facade.ItemHashUtil">
        <property name="contentHostingService" ref="org.sakaiproject.content.api.ContentHostingService" />
        <property name="transactionManager"><ref bean="org.sakaiproject.springframework.orm.hibernate.GlobalTransactionManager"/></property>
    </bean>


    <bean id="AssessmentGradingFacadeQueries"
          class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
      <property name="transactionManager"><ref bean="org.sakaiproject.springframework.orm.hibernate.GlobalTransactionManager"/></property>
      <property name="target">
        <bean class="org.sakaiproject.tool.assessment.facade.AssessmentGradingFacadeQueries">
          <property name="sessionFactory"><ref bean="org.sakaiproject.springframework.orm.hibernate.GlobalSessionFactory"/></property>
          <property name="contentHostingService" ref="org.sakaiproject.content.api.ContentHostingService"/>
          <property name="securityService" ref="org.sakaiproject.authz.api.SecurityService"/>
          <property name="userDirectoryService" ref="org.sakaiproject.user.api.UserDirectoryService"/>
          <property name="persistenceHelper" ref="persistenceHelper"/>
	</bean>
      </property>
      <property name="transactionAttributes">
        <props>
          <prop key="*">PROPAGATION_REQUIRED</prop>
        </props>
      </property>
    </bean>

    <bean id="AutoSubmitQueries"
          class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
      <property name="transactionManager"><ref bean="org.sakaiproject.springframework.orm.hibernate.GlobalTransactionManager"/></property>
      <property name="target">
        <bean class="org.sakaiproject.tool.assessment.facade.util.autosubmit.AutoSubmitQueries">
          <property name="sessionFactory"><ref bean="org.sakaiproject.springframework.orm.hibernate.GlobalSessionFactory"/></property>
    </bean>
      </property>
      <property name="transactionAttributes">
        <props>
          <prop key="*">PROPAGATION_REQUIRED</prop>
        </props>
      </property>
    </bean>

    <bean id="AuthorizationFacadeQueries"
          class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
      <property name="transactionManager"><ref bean="org.sakaiproject.springframework.orm.hibernate.GlobalTransactionManager"/></property>
      <property name="target">
        <bean class="org.sakaiproject.tool.assessment.facade.authz.AuthorizationFacadeQueries">
          <property name="sessionFactory"><ref bean="org.sakaiproject.springframework.orm.hibernate.GlobalSessionFactory"/></property>
	</bean>
      </property>
      <property name="transactionAttributes">
        <props>
          <prop key="*">PROPAGATION_REQUIRED</prop>
        </props>
      </property>
    </bean>

    <bean id="PagingUtilQueries"
          class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
      <property name="transactionManager"><ref bean="org.sakaiproject.springframework.orm.hibernate.GlobalTransactionManager"/></property>
      <property name="target">
        <bean class="org.sakaiproject.tool.assessment.facade.util.PagingUtilQueries">
          <property name="sessionFactory"><ref bean="org.sakaiproject.springframework.orm.hibernate.GlobalSessionFactory"/></property>
	</bean>
      </property>
      <property name="transactionAttributes">
        <props>
          <prop key="*">PROPAGATION_REQUIRED</prop>
        </props>
      </property>
    </bean>

    <bean id="AuthzQueriesFacade"
          class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
      <property name="transactionManager"><ref bean="org.sakaiproject.springframework.orm.hibernate.GlobalTransactionManager"/></property>
      <property name="target">
        <bean class="org.sakaiproject.tool.assessment.facade.authz.integrated.AuthzQueriesFacade">
          <property name="sessionFactory"><ref bean="org.sakaiproject.springframework.orm.hibernate.GlobalSessionFactory"/></property>
          <property name="authzGroupService" ref="org.sakaiproject.authz.api.AuthzGroupService"/>
	</bean>
      </property>
      <property name="transactionAttributes">
        <props>
          <prop key="*">PROPAGATION_REQUIRED</prop>
        </props>
      </property>
    </bean>

    <bean id="FavoriteColChoicesFacadeQueries"
          class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
      <property name="transactionManager"><ref bean="org.sakaiproject.springframework.orm.hibernate.GlobalTransactionManager"/></property>
      <property name="target">
        <bean class="org.sakaiproject.tool.assessment.facade.FavoriteColChoicesFacadeQueries">
          <property name="sessionFactory"><ref bean="org.sakaiproject.springframework.orm.hibernate.GlobalSessionFactory"/></property>
	</bean>
      </property>
      <property name="transactionAttributes">
        <props>
          <prop key="*">PROPAGATION_REQUIRED</prop>
        </props>
      </property>
    </bean>

    <!-- Currently being used to AutoDdl at startup -->
    <bean id="org.sakaiproject.tool.assessment.shared.SakaiBootStrap"
          class="org.sakaiproject.tool.assessment.shared.SakaiBootStrap"
          init-method="init" depends-on="org.sakaiproject.springframework.orm.hibernate.GlobalSessionFactory">
      <property name="autoDdl">
	<value>true</value>
      </property>
    </bean>

	<!-- Conversion utility for moving media to Content Hosting -->
	<!-- Doesn't really depend on SakaiBootStrap, but needs to init after it -->
	<bean id="MediaContentConverter"
			class="org.sakaiproject.tool.assessment.util.MediaContentConverter"
			init-method="init" depends-on="org.sakaiproject.tool.assessment.shared.SakaiBootStrap">
		<property name="persistenceService" ref="PersistenceService" />
	</bean>

  <bean id="QTIService"
    class="org.sakaiproject.tool.assessment.services.qti.QTIService">
  </bean>

    <bean id="org.sakaiproject.tool.assessment.services.assessment.AssessmentEntityProducer"
              class="org.sakaiproject.tool.assessment.services.assessment.AssessmentEntityProducer"
              init-method="init" destroy-method="destroy">
	  <property name="qtiService" ref="QTIService"/>
    </bean>


  <bean id ="org.sakaiproject.tool.assessment.entity.api.PublishedEntityProvider"
      class="org.sakaiproject.tool.assessment.entity.impl.PublishedAssessmentEntityProviderImpl">
    <property name="publishedAssessmentFacadeQueries" ref="PublishedAssessmentFacadeQueries" />
    <property name="securityService" ref="org.sakaiproject.authz.api.SecurityService" />
    <property name="developerHelperService" ref="org.sakaiproject.entitybroker.DeveloperHelperService" />
  </bean>

  <bean id ="org.sakaiproject.tool.assessment.entity.api.CoreAssessmentEntityProvider"
      class="org.sakaiproject.tool.assessment.entity.impl.CoreAssessmentEntityProviderImpl">
    <property name="publishedAssessmentFacadeQueries" ref="PublishedAssessmentFacadeQueries" />
    <property name="securityService" ref="org.sakaiproject.authz.api.SecurityService" />
    <property name="developerHelperService" ref="org.sakaiproject.entitybroker.DeveloperHelperService" />
  </bean>

    <bean id ="org.sakaiproject.tool.assessment.entity.api.ItemEntityProvider"
       class="org.sakaiproject.tool.assessment.entity.impl.ItemEntityProviderImpl">
        <property name="itemFacadeQueries" ref="ItemFacadeQueries" />
        <property name="questionPoolFacadeQueries" ref="QuestionPoolFacadeQueries" />
        <property name="assessmentFacadeQueries" ref="AssessmentFacadeQueries" />
        <property name="developerHelperService" ref="org.sakaiproject.entitybroker.DeveloperHelperService" />
        <property name="siteService" ref="org.sakaiproject.site.api.SiteService" />
    </bean>

    <bean id ="org.sakaiproject.tool.assessment.entity.api.PublishedItemEntityProvider"
          class="org.sakaiproject.tool.assessment.entity.impl.PublishedItemEntityProviderImpl">
        <property name="publishedItemFacadeQueries" ref="PublishedItemFacadeQueries" />
        <property name="publishedAssessmentFacadeQueries" ref="PublishedAssessmentFacadeQueries" />
        <property name="siteService" ref="org.sakaiproject.site.api.SiteService" />
        <property name="developerHelperService" ref="org.sakaiproject.entitybroker.DeveloperHelperService" />
    </bean>

    <bean id="org.sakaiproject.samigo.search.ItemContentProducer"
             class="org.sakaiproject.samigo.search.ItemContentProducer"
             init-method="init">
       <property name="entityManager"><ref bean="org.sakaiproject.entity.api.EntityManager" /></property>
       <property name="searchService"><ref bean="org.sakaiproject.search.api.SearchService"/></property>
       <property name="searchIndexBuilder"><ref bean="org.sakaiproject.samigo.search.QuestionElasticSearchIndexBuilder" /></property>
    </bean>

    <bean id="org.sakaiproject.samigo.search.PublishedItemContentProducer"
          class="org.sakaiproject.samigo.search.PublishedItemContentProducer"
          init-method="init">
        <property name="entityManager"><ref bean="org.sakaiproject.entity.api.EntityManager" /></property>
        <property name="searchService"><ref bean="org.sakaiproject.search.api.SearchService"/></property>
        <property name="searchIndexBuilder"><ref bean="org.sakaiproject.samigo.search.QuestionElasticSearchIndexBuilder" /></property>
    </bean>



   <!--  Add a job to auto-submit assessments -->
   <bean id="AutoSubmitAssessments" class="org.sakaiproject.tool.assessment.services.AutoSubmitAssessmentsJob" 
   	init-method="init" destroy-method="destroy">
       <property name="authzGroupService" ref="org.sakaiproject.authz.api.AuthzGroupService"/>
       <property name="samigoETSProvider" ref="org.sakaiproject.samigo.api.SamigoETSProvider"/>
   </bean>

   <bean id="org.sakaiproject.api.app.scheduler.JobBeanWrapper.AutoSubmitAssessments"
      class="org.sakaiproject.component.app.scheduler.jobs.SpringJobBeanWrapper"
      init-method="init">
      <property name="beanId">
         <value>AutoSubmitAssessments</value>
      </property>
      <property name="jobName">
      	 <!--  this is how the job is listed in the jobscheduler UI -->
         <value>Auto Submit Assessments Job</value>
      </property>
      <property name="schedulerManager">
         <ref bean="org.sakaiproject.api.app.scheduler.SchedulerManager" />
      </property>
   </bean>

    <bean id="BackfillItemHashesJob" class="org.sakaiproject.tool.assessment.services.BackfillItemHashesJob">
        <property name="sessionManager" ref="org.sakaiproject.tool.api.SessionManager" />
        <property name="serverConfigurationService" ref="org.sakaiproject.component.api.ServerConfigurationService" />
        <property name="emailService" ref="org.sakaiproject.email.api.EmailService" />
    </bean>

    <bean id="org.sakaiproject.api.app.scheduler.JobBeanWrapper.BackfillItemHashesJob"
          class="org.sakaiproject.component.app.scheduler.jobs.SpringConfigurableJobBeanWrapper"
          init-method="init">
        <property name="beanId" value="BackfillItemHashesJob" />
        <property name="jobName" value="Backfill Samigo Item Hashes Job" />
        <property name="schedulerManager" ref="org.sakaiproject.api.app.scheduler.SchedulerManager" />
        <property name="resourceBundleBase" value="org.sakaiproject.tool.assessment.services.BackfillItemHashesJobMessages"/>
        <property name="configurableJobProperties">
            <set>
                <bean class="org.sakaiproject.component.app.scheduler.jobs.SpringConfigurableJobProperty">
                    <property name="required" value="false"/>
                    <property name="labelResourceKey" value="batch.size"/>
                    <property name="descriptionResourceKey" value="batch.size.description"/>
                    <property name="defaultValue" value="100"/>
                </bean>
                <bean class="org.sakaiproject.component.app.scheduler.jobs.SpringConfigurableJobProperty">
                    <property name="required" value="false"/>
                    <property name="labelResourceKey" value="backfill.items"/>
                    <property name="descriptionResourceKey" value="backfill.items.description"/>
                    <property name="defaultValue" value="true"/>
                </bean>
                <bean class="org.sakaiproject.component.app.scheduler.jobs.SpringConfigurableJobProperty">
                    <property name="required" value="false"/>
                    <property name="labelResourceKey" value="backfill.published.items"/>
                    <property name="descriptionResourceKey" value="backfill.published.items.description"/>
                    <property name="defaultValue" value="true"/>
                </bean>
                <bean class="org.sakaiproject.component.app.scheduler.jobs.SpringConfigurableJobProperty">
                    <property name="required" value="false"/>
                    <property name="labelResourceKey" value="backfill.published.items.baseline.hash"/>
                    <property name="descriptionResourceKey" value="backfill.published.items.baseline.hash.description"/>
                    <property name="defaultValue" value="false"/>
                </bean>
                <bean class="org.sakaiproject.component.app.scheduler.jobs.SpringConfigurableJobProperty">
                    <property name="required" value="false"/>
                    <property name="labelResourceKey" value="notification.email.address"/>
                    <property name="descriptionResourceKey" value="notification.email.address.description"/>
                    <property name="defaultValue" value=""/>
                </bean>
            </set>
        </property>
        <property name="configurableJobPropertyValidator">
            <bean class="org.sakaiproject.tool.assessment.services.BackfillItemHashesJob.BackfillItemHashesConfigurationValidator" />
        </property>
    </bean>

    <!-- Email Template Service Setup -->
    <bean id="org.sakaiproject.samigo.api.SamigoETSProvider"
          class="org.sakaiproject.samigo.impl.SamigoETSProviderImpl"
          init-method="init">
        <property name="userDirectoryService" ref="org.sakaiproject.user.api.UserDirectoryService"/>
        <property name="serverConfigurationService" ref="org.sakaiproject.component.api.ServerConfigurationService"/>
        <property name="emailTemplateService" ref="org.sakaiproject.emailtemplateservice.service.EmailTemplateService"/>
        <property name="emailService" ref="org.sakaiproject.email.api.EmailService"/>
        <property name="digestService" ref="org.sakaiproject.email.api.DigestService"/>
        <property name="preferencesService" ref="org.sakaiproject.user.api.PreferencesService"/>
        <property name="siteService" ref="org.sakaiproject.site.api.SiteService" />
        <property name="authzGroupService" ref="org.sakaiproject.authz.api.AuthzGroupService"/>
    </bean>

    <bean id="org.sakaiproject.samigo.impl.SamigoObserver"
          class="org.sakaiproject.samigo.impl.SamigoObserver"
          init-method="init">
        <property name="eventTrackingService" ref="org.sakaiproject.event.api.EventTrackingService" />
        <property name="samigoETSProvider" ref="org.sakaiproject.samigo.api.SamigoETSProvider" />
    </bean>

    <!-- Adds User Preference for Notifications -->
    <bean id="org.sakaiproject.user.api.UserNotificationPreferencesRegistration.samigo"
          parent="org.sakaiproject.user.api.UserNotificationPreferencesRegistration"
          class="org.sakaiproject.samigo.user.prefs.SamigoUserNotificationPreferencesRegistrationImpl"
          init-method="init">
        <property name="bundleLocation"><value>samigo-noti-prefs</value></property>
        <property name="sectionTitleBundleKey"><value>prefs_title</value></property>
        <property name="sectionDescriptionBundleKey"><value>prefs_description</value></property>
        <property name="overrideSectionTitleBundleKey"><value>prefs_title_override</value></property>
        <property name="defaultValue"><value>3</value></property>
        <property name="type"><value>sakai:samigo</value></property>
        <property name="prefix"><value>samigo</value></property>
        <property name="toolId"><value>sakai.samigo</value></property>
        <property name="rawOptions">
            <map>
                <entry key="1"><value>prefs_opt1</value></entry>
                <entry key="2"><value>prefs_opt2</value></entry>
                <entry key="3"><value>prefs_opt3</value></entry>
            </map>
        </property>
        <property name="overrideBySite"><value>false</value></property>
        <property name="expandByDefault"><value>true</value></property>
    </bean>

    <bean id="org.sakaiproject.tool.assessment.facade.ExtendedTimeFacade"
          class="org.sakaiproject.tool.assessment.facade.ExtendedTimeFacade"
        init-method="init">
        <property name="extendedTimeQueries" ref="org.sakaiproject.tool.assessment.facade.ExtendedTimeQueriesAPI" />
    </bean>

    <!-- DAO. This uses the DataSource that has already been setup by Sakai  -->
    <bean id="org.sakaiproject.tool.assessment.facade.ExtendedTimeQueriesTarget"
          class="org.sakaiproject.tool.assessment.facade.ExtendedTimeQueries"
          init-method="init">
        <property name="sessionFactory" ref="org.sakaiproject.springframework.orm.hibernate.GlobalSessionFactory" />
    </bean>

    <!-- Extended Time Data Access Object -->
    <bean id="org.sakaiproject.tool.assessment.facade.ExtendedTimeQueriesAPI"
          class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
        <property name="transactionManager" ref="org.sakaiproject.springframework.orm.hibernate.GlobalTransactionManager" />
        <property name="target" ref="org.sakaiproject.tool.assessment.facade.ExtendedTimeQueriesTarget" />
        <property name="transactionAttributes">
            <props>
                <prop key="*">PROPAGATION_REQUIRED</prop>
            </props>
        </property>
    </bean>

    <bean id="org.sakaiproject.samigo.search.QuestionElasticSearchIndexBuilder"
          class="org.sakaiproject.samigo.search.QuestionElasticSearchIndexBuilder"
          destroy-method="destroy">
        <!-- No internal defaulting on indexName nor name b/c we really cannot have multiple index builders falling
        back to the same values in either of those fields. But there is such a thing as a historical default at least
        for indexName, and some functionality is potentially keyed off the default builder name, so we keep those two
        *values* in code, even though their assignment occurs here in config. -->
        <property name="indexName" value="questions_index"/>
        <property name="name" value="questions" />
        <property name="eventTrackingService"><ref bean="org.sakaiproject.event.api.EventTrackingService"/></property>
        <property name="siteService"><ref bean="org.sakaiproject.site.api.SiteService"/></property>
        <property name="securityService"><ref bean="org.sakaiproject.authz.api.SecurityService" /></property>
        <property name="serverConfigurationService"><ref bean="org.sakaiproject.component.api.ServerConfigurationService"/></property>
        <property name="filter"><ref bean="org.sakaiproject.search.elasticsearch.filter.impl.SearchSecurityFilter"/></property>
    </bean>
 </beans>

