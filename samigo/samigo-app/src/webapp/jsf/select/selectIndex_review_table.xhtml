<?xml version="1.0" encoding="UTF-8"?>
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
    xmlns:f="http://xmlns.jcp.org/jsf/core"
    xmlns:h="http://xmlns.jcp.org/jsf/html"
    xmlns:t="http://myfaces.apache.org/tomahawk"
    xmlns:ui="http://xmlns.jcp.org/jsf/facelets">

    <!-- REVIEW TABLE -->
    <div class="table table-sent-assessments">
        <t:dataTable styleClass="table table-hover table-striped table-bordered table-assessments"
            id="reviewTable"
            value="#{select.reviewableAssessments}"
            var="reviewable"
            summary="#{selectIndexMessages.sum_submittedAssessment}">

            <t:column rendered="#{select.displayAllAssessments ne 3}">
                <f:facet name="header">
                    <h:panelGroup>
                        <h:outputText value="#{selectIndexMessages.title} " styleClass="currentSort" />
                        <h:panelGroup rendered="#{select.displayAllAssessments ne '1'}">
                            <h:outputText value="" styleClass="displayAllAssessments hidden" />
                        </h:panelGroup>
                    </h:panelGroup>
                </f:facet>
                <h:outputText value="#{reviewable.assessmentTitle}" rendered="#{not reviewable.isRecordedAssessment}" styleClass="d-none" />
                <h:outputText styleClass="highlight fa fa-fw fa-exclamation-circle"
                    rendered="#{reviewable.isRecordedAssessment and not reviewable.isAssessmentRetractForEdit and reviewable.hasAssessmentBeenModified and select.warnUserOfModification}"
                    title="#{selectIndexMessages.has_been_modified}" />
                <h:outputText styleClass="highlight fa fa-fw fa-exclamation"
                    rendered="#{reviewable.isRecordedAssessment and reviewable.isAssessmentRetractForEdit}"
                    title="#{selectIndexMessages.currently_being_edited}" />
                <h:outputText value="#{reviewable.assessmentTitle}" styleClass="currentSort"
                    rendered="#{reviewable.isRecordedAssessment}" escape="false" />
            </t:column>

            <t:column>
                <f:facet name="header">
                    <h:panelGroup>
                        <h:outputText value="#{selectIndexMessages.stats}" styleClass="currentSort" />
                    </h:panelGroup>
                </f:facet>
                <h:panelGroup>
                    <h:commandLink title="#{selectIndexMessages.t_histogram}" id="histogram"
                        action="#{delivery.getOutcome}" immediate="true"
                        rendered="#{reviewable.feedback eq 'show' and reviewable.feedbackComponentOption eq '2' and reviewable.statistics and not reviewable.isAssessmentRetractForEdit and reviewable.isRecordedAssessment}">
                        <f:param name="publishedAssessmentId" value="#{reviewable.assessmentId}" />
                        <f:param name="hasNav" value="false" />
                        <f:param name="allSubmissions" value="true" />
                        <f:param name="actionString" value="reviewAssessment" />
                        <f:param name="isFromStudent" value="true" />
                        <f:actionListener type="org.sakaiproject.tool.assessment.ui.listener.evaluation.HistogramListener" />
                        <h:outputText value="#{selectIndexMessages.stats} " />
                    </h:commandLink>
                </h:panelGroup>
                <h:outputText value="#{selectIndexMessages.not_applicable}" styleClass="currentSort"
                    rendered="#{(reviewable.feedback eq 'na' or reviewable.feedbackComponentOption eq '1' or reviewable.isAssessmentRetractForEdit or not reviewable.statistics) and reviewable.isRecordedAssessment}" />
            </t:column>

            <t:column>
                <f:facet name="header">
                    <h:panelGroup>
                        <h:outputText value="#{selectIndexMessages.recorded_score}" styleClass="currentSort" />
                    </h:panelGroup>
                </f:facet>

                <h:outputText value="#{reviewable.roundedRawScoreToDisplay} " styleClass="currentSort"
                    rendered="#{reviewable.showScore eq 'show' and reviewable.isRecordedAssessment and not reviewable.isAssessmentRetractForEdit}" />
                <h:outputText value="" rendered="#{not reviewable.isRecordedAssessment and reviewable.showScore eq 'show' and not reviewable.isAssessmentRetractForEdit}" />
                <h:outputText value="#{selectIndexMessages.highest_score}"
                    rendered="#{reviewable.multipleSubmissions eq 'true' and reviewable.isRecordedAssessment and reviewable.scoringOption eq '1' and (reviewable.showScore eq 'show' or reviewable.showScore eq 'blank') and not reviewable.isAssessmentRetractForEdit}" />
                <h:outputText value="#{selectIndexMessages.last_score}"
                    rendered="#{reviewable.multipleSubmissions eq 'true' and reviewable.isRecordedAssessment and reviewable.scoringOption eq '2' and (reviewable.showScore eq 'show' or reviewable.showScore eq 'blank') and not reviewable.isAssessmentRetractForEdit}" />
                <h:outputText value="#{selectIndexMessages.average_score}"
                    rendered="#{reviewable.multipleSubmissions eq 'true' and reviewable.isRecordedAssessment and reviewable.scoringOption eq '4' and (reviewable.showScore eq 'show' or reviewable.showScore eq 'blank') and not reviewable.isAssessmentRetractForEdit}" />
                <h:outputText value="#{selectIndexMessages.not_applicable}" styleClass="currentSort"
                    rendered="#{(reviewable.showScore eq 'na' or reviewable.isAssessmentRetractForEdit) and reviewable.isRecordedAssessment}" />
            </t:column>

            <t:column>
                <f:facet name="header">
                    <h:panelGroup>
                        <h:outputText value="#{selectIndexMessages.feedback_date}" styleClass="currentSort" />
                    </h:panelGroup>
                </f:facet>

                <h:outputText value="#{reviewable.feedbackDate}" styleClass="currentSort"
                    rendered="#{reviewable.feedbackComponentOption eq '2' and reviewable.feedbackDelivery eq '2' and not reviewable.isAssessmentRetractForEdit and reviewable.isRecordedAssessment}">
                    <f:convertDateTime dateStyle="medium" timeStyle="short" timeZone="#{author.userTimeZone}" />
                </h:outputText>
                <h:outputText value=" - "
                    rendered="#{reviewable.feedbackComponentOption eq '2' and reviewable.feedbackDelivery eq '2' and not reviewable.isAssessmentRetractForEdit and reviewable.isRecordedAssessment and not empty reviewable.feedbackEndDate}" />
                <h:outputText value="#{reviewable.feedbackEndDate}" styleClass="currentSort"
                    rendered="#{reviewable.feedbackComponentOption eq '2' and reviewable.feedbackDelivery eq '2' and not reviewable.isAssessmentRetractForEdit and reviewable.isRecordedAssessment and not empty reviewable.feedbackEndDate}">
                    <f:convertDateTime dateStyle="medium" timeStyle="short" timeZone="#{author.userTimeZone}" />
                </h:outputText>
                <h:outputText value="#{selectIndexMessages.immediate}" styleClass="currentSort"
                    rendered="#{reviewable.feedbackComponentOption eq '2' and (reviewable.feedbackDelivery eq '1' or reviewable.feedbackDelivery eq '4') and not reviewable.isAssessmentRetractForEdit and reviewable.isRecordedAssessment}" />
                <h:outputText value="#{selectIndexMessages.not_applicable}" styleClass="currentSort"
                    rendered="#{(reviewable.feedbackComponentOption eq '1' or reviewable.feedbackDelivery == null or reviewable.feedbackDelivery eq '3' or reviewable.isAssessmentRetractForEdit) and reviewable.isRecordedAssessment}" />

                <h:commandLink title="#{selectIndexMessages.t_reviewAssessment}"
                    action="#{delivery.getOutcome}" immediate="true"
                    rendered="#{reviewable.feedback eq 'show' and reviewable.feedbackComponentOption eq '2' and not reviewable.isAssessmentRetractForEdit and select.displayAllAssessments ne '1' and not reviewable.isRecordedAssessment}">
                    <f:param name="publishedId" value="#{reviewable.assessmentId}" />
                    <f:param name="assessmentGradingId" value="#{reviewable.assessmentGradingId}" />
                    <f:param name="nofeedback" value="false" />
                    <f:param name="actionString" value="reviewAssessment" />
                    <f:actionListener type="org.sakaiproject.tool.assessment.ui.listener.delivery.BeginDeliveryActionListener" />
                    <f:actionListener type="org.sakaiproject.tool.assessment.ui.listener.delivery.DeliveryActionListener" />
                    <h:outputText styleClass="currentSort" value="#{commonMessages.feedback}"
                        rendered="#{reviewable.isRecordedAssessment and select.displayAllAssessments ne '1'}" escape="false" />
                    <h:outputText value="#{commonMessages.feedback}" rendered="#{not reviewable.isRecordedAssessment}" escape="false" />
                </h:commandLink>
            </t:column>

            <t:column rendered="#{select.displayAllAssessments ne '1'}" headerstyleClass="d-none d-sm-table-cell" styleClass="d-none d-sm-table-cell">
                <f:facet name="header">
                    <h:panelGroup>
                        <h:outputText value="#{selectIndexMessages.individual_score}" styleClass="currentSort" />
                    </h:panelGroup>
                </f:facet>

                <h:outputText value="#{reviewable.roundedRawScoreToDisplay} "
                    rendered="#{reviewable.showScore eq 'show' and not reviewable.isAssessmentRetractForEdit and not reviewable.isRecordedAssessment}" />
                <h:outputText value="#{selectIndexMessages.not_applicable}"
                    rendered="#{(reviewable.showScore eq 'na' or reviewable.isAssessmentRetractForEdit) and not reviewable.isRecordedAssessment}" />
            </t:column>

            <t:column rendered="#{select.displayAllAssessments ne '1'}" headerstyleClass="d-none d-sm-table-cell" styleClass="d-none d-sm-table-cell">
                <f:facet name="header">
                    <h:panelGroup>
                        <h:outputText value="#{selectIndexMessages.time} " styleClass="currentSort" />
                    </h:panelGroup>
                </f:facet>

                <h:panelGroup>
                    <h:outputText id="timeElapse" value="#{reviewable.timeElapse}" styleClass="currentSort"
                        rendered="#{reviewable.isRecordedAssessment}" />
                    <h:outputText value="#{reviewable.timeElapse}" rendered="#{not reviewable.isRecordedAssessment}" />
                </h:panelGroup>
            </t:column>

            <t:column rendered="#{select.displayAllAssessments ne '1'}" headerstyleClass="d-none d-sm-table-cell" styleClass="d-none d-sm-table-cell">
                <f:facet name="header">
                    <h:panelGroup>
                        <h:outputText value="#{selectIndexMessages.submitted} " styleClass="currentSort" />
                    </h:panelGroup>
                </f:facet>

                <h:outputText value="#{reviewable.submissionDate}" styleClass="currentSort"
                    rendered="#{reviewable.isRecordedAssessment}">
                    <f:convertDateTime dateStyle="medium" timeStyle="short" timeZone="#{author.userTimeZone}" />
                </h:outputText>
                <h:outputText value="#{reviewable.submissionDate}" rendered="#{not reviewable.isRecordedAssessment}">
                    <f:convertDateTime dateStyle="medium" timeStyle="short" timeZone="#{author.userTimeZone}" />
                </h:outputText>
            </t:column>
        </t:dataTable>

        <t:div styleClass="sam-asterisks-row"
            rendered="#{(select.hasAnyAssessmentBeenModified and select.warnUserOfModification) or select.hasAnyAssessmentRetractForEdit}">
            <h:panelGroup rendered="#{select.hasAnyAssessmentBeenModified and select.warnUserOfModification}">
                <p>
                    <h:outputText styleClass="highlight fa fa-fw fa-exclamation-circle" />
                    <h:outputText value="#{selectIndexMessages.has_been_modified}" styleClass="highlight" />
                </p>
            </h:panelGroup>
            <h:panelGroup rendered="#{select.hasAnyAssessmentRetractForEdit}">
                <p>
                    <h:outputText styleClass="highlight fa fa-fw fa-exclamation"
                        title="#{selectIndexMessages.currently_being_edited}" />
                    <h:outputText value="#{selectIndexMessages.currently_being_edited}" styleClass="highlight" />
                </p>
            </h:panelGroup>
        </t:div>
    </div>

</ui:composition>
