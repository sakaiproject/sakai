<?xml version="1.0" encoding="UTF-8"?>
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
    xmlns:f="http://xmlns.jcp.org/jsf/core"
    xmlns:h="http://xmlns.jcp.org/jsf/html"
    xmlns:t="http://myfaces.apache.org/tomahawk"
    xmlns:ui="http://xmlns.jcp.org/jsf/facelets">

    <!--
    ***********************************************************************************
    * Copyright (c) ${license.git.copyrightYears} ${holder}
    *
    * Licensed under the Educational Community License, Version 2.0 (the "License");
    * you may not use this file except in compliance with the License.
    * You may obtain a copy of the License at
    *
    *             http://opensource.org/licenses/ecl2
    *
    * Unless required by applicable law or agreed to in writing, software
    * distributed under the License is distributed on an "AS IS" BASIS,
    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    * See the License for the specific language governing permissions and
    * limitations under the License.
    ***********************************************************************************
    -->

    <h:outputText value="#{select.secureDeliveryHTMLFragments}" escape="false" />

    <script>includeWebjarLibrary('datatables');</script>
    <script src="/samigo-app/js/naturalSort.js"></script>
    <script>
        $(document).ready(function() {
            jQuery.extend(jQuery.fn.dataTableExt.oSort, {
                "span-asc": function (a, b) {
                    return naturalSort($(a).find('.spanValue').text().toLowerCase(), $(b).find('.spanValue').text().toLowerCase(), false);
                },
                "span-desc": function (a, b) {
                    return naturalSort($(a).find('.spanValue').text().toLowerCase(), $(b).find('.spanValue').text().toLowerCase(), false) * -1;
                },
                "numeric-asc": function (a, b) {
                    var numA = parseInt($(a).text()) || 0;
                    var numB = parseInt($(b).text()) || 0;
                    return ((numB &lt; numA) ? 1 : ((numB &gt; numA) ? -1 : 0));
                },
                "numeric-desc": function (a, b) {
                    var numA = parseInt($(a).text()) || 0;
                    var numB = parseInt($(b).text()) || 0;
                    return ((numA &lt; numB) ? 1 : ((numA &gt; numB) ? -1 : 0));
                }
            });

            var viewAllText = <h:outputText value="'#{authorFrontDoorMessages.assessment_view_all}'" />;
            var searchText = <h:outputText value="'#{dataTablesMessages.search}'" />;
            var lengthMenuText = <h:outputText value="'#{authorFrontDoorMessages.datatables_lengthMenu}'" />;
            var zeroRecordsText = <h:outputText value="'#{authorFrontDoorMessages.datatables_zeroRecords}'" />;
            var infoText = <h:outputText value="'#{dataTablesMessages.info}'" />;
            var infoEmptyText = <h:outputText value="'#{authorFrontDoorMessages.datatables_infoEmpty}'" />;
            var infoFilteredText = <h:outputText value="'#{authorFrontDoorMessages.datatables_infoFiltered}'" />;
            var emptyTableText = <h:outputText value="'#{authorFrontDoorMessages.datatables_infoEmpty}'" />;
            var nextText = <h:outputText value="'#{dataTablesMessages.paginate_next}'" />;
            var previousText = <h:outputText value="'#{dataTablesMessages.paginate_previous}'" />;
            var sortAscendingText = <h:outputText value="'#{dataTablesMessages.aria_sortAscending}'" />;
            var sortDescendingText = <h:outputText value="'#{dataTablesMessages.aria_sortDescending}'" />;

            var notEmptySelectTableTd = $('#selectIndexForm\\:selectTable td:not(:empty)').length;
            if (notEmptySelectTableTd > 0) {
                $.fn.dataTable.ext.classes.sLengthSelect = 'input-form-control';
                $('#selectIndexForm\\:selectTable').DataTable({
                    paging: true,
                    lengthMenu: [[5, 10, 20, 50, 100, 200, -1], [5, 10, 20, 50, 100, 200, viewAllText]],
                    pageLength: 20,
                    aaSorting: [[2, 'asc']],
                    columns: [
                        { bSortable: true, bSearchable: true, type: 'span' },
                        { bSortable: true, bSearchable: false },
                        { bSortable: true, bSearchable: true, type: 'numeric' }
                    ],
                    language: {
                        search: searchText,
                        lengthMenu: lengthMenuText,
                        zeroRecords: zeroRecordsText,
                        info: infoText,
                        infoEmpty: infoEmptyText,
                        infoFiltered: infoFilteredText,
                        emptyTable: emptyTableText,
                        paginate: {
                            next: nextText,
                            previous: previousText
                        },
                        aria: {
                            sortAscending: sortAscendingText,
                            sortDescending: sortDescendingText
                        }
                    }
                });
            }

            var notEmptyReviewTableTd = $('#selectIndexForm\\:reviewTable td:not(:empty)').length;
            if (notEmptyReviewTableTd > 0) {
                if ($('#selectIndexForm\\:reviewTable .displayAllAssessments').length > 0) {
                    $('#selectIndexForm\\:reviewTable').DataTable({
                        paging: true,
                        lengthMenu: [[5, 10, 20, 50, 100, 200, -1], [5, 10, 20, 50, 100, 200, viewAllText]],
                        pageLength: 20,
                        aaSorting: [[6, 'desc']],
                        paging: false,
                        ordering: false,
                        info: false,
                        columns: [
                            { bSortable: true, bSearchable: true },
                            { bSortable: true, bSearchable: false },
                            { bSortable: true, bSearchable: false },
                            { bSortable: true, bSearchable: true },
                            { bSortable: true, bSearchable: false },
                            { bSortable: true, bSearchable: false },
                            { bSortable: true, bSearchable: true }
                        ],
                        language: {
                            search: searchText,
                            lengthMenu: lengthMenuText,
                            zeroRecords: zeroRecordsText,
                            info: infoText,
                            infoEmpty: infoEmptyText,
                            infoFiltered: infoFilteredText,
                            emptyTable: emptyTableText,
                            paginate: {
                                next: nextText,
                                previous: previousText
                            },
                            aria: {
                                sortAscending: sortAscendingText,
                                sortDescending: sortDescendingText
                            }
                        }
                    });
                } else {
                    $('#selectIndexForm\\:reviewTable').DataTable({
                        paging: true,
                        lengthMenu: [[5, 10, 20, 50, 100, 200, -1], [5, 10, 20, 50, 100, 200, viewAllText]],
                        pageLength: 20,
                        paging: false,
                        ordering: false,
                        info: false,
                        columns: [
                            { bSortable: true, bSearchable: true },
                            { bSortable: true, bSearchable: false },
                            { bSortable: true, bSearchable: false },
                            { bSortable: true, bSearchable: true }
                        ],
                        language: {
                            search: searchText,
                            lengthMenu: lengthMenuText,
                            zeroRecords: zeroRecordsText,
                            info: infoText,
                            infoEmpty: infoEmptyText,
                            infoFiltered: infoFilteredText,
                            emptyTable: emptyTableText,
                            paginate: {
                                next: nextText,
                                previous: previousText
                            },
                            aria: {
                                sortAscending: sortAscendingText,
                                sortDescending: sortDescendingText
                            }
                        }
                    });
                }
            }
        });
    </script>

    <div class="portletBody container-fluid">
        <div class="page-header">
            <h1>
                <h:outputText value="#{selectIndexMessages.page_heading}" />
            </h1>
        </div>

        <h:form id="selectIndexForm">
            <div class="submission-container">
                <h2>
                    <h:outputText value="#{selectIndexMessages.take_assessment}" />
                </h2>

                <p class="info-text">
                    <h:outputText rendered="#{select.isThereAssessmentToTake eq 'true'}" value="#{selectIndexMessages.take_assessment_notes}" />
                    <h:outputText rendered="#{select.isThereAssessmentToTake eq 'false'}" value="#{selectIndexMessages.take_assessment_notAvailable}" />
                </p>

                <t:dataTable id="selectTable"
                    rendered="#{select.isThereAssessmentToTake eq 'true'}"
                    value="#{select.takeableAssessments}"
                    var="takeable"
                    styleClass="table table-hover table-striped table-bordered table-assessments"
                    summary="#{selectIndexMessages.sum_availableAssessment}">
                    <t:column headerstyleClass="assessmentTitleHeader">
                        <f:facet name="header">
                            <h:panelGroup>
                                <a href="#" tabindex="-1">
                                    <h:outputText value="#{selectIndexMessages.title}" />
                                </a>
                            </h:panelGroup>
                        </f:facet>

                        <h:panelGroup rendered="#{not empty takeable.alternativeDeliveryUrl}">
                            <h:outputLink value="#{takeable.alternativeDeliveryUrl}" title="Proctored Assessment Link">
                                <span class="fa fa-user-circle-o" title="Proctored Assessment Link"></span>
                                <h:outputText value="#{takeable.assessmentTitle}" escape="false" />
                            </h:outputLink>
                        </h:panelGroup>

                        <h:commandLink title="#{selectIndexMessages.t_takeAssessment}" id="takeAssessment"
                            action="beginAssessment"
                            rendered="#{empty takeable.alternativeDeliveryUrl}">
                            <f:param name="publishedId" value="#{takeable.assessmentId}" />
                            <f:param name="actionString" value="takeAssessment" />
                            <f:actionListener type="org.sakaiproject.tool.assessment.ui.listener.delivery.BeginDeliveryActionListener" />
                            <h:outputText value="#{takeable.assessmentTitle}" escape="false" styleClass="spanValue" />
                        </h:commandLink>
                        <h:outputText value="#{selectIndexMessages.assessment_updated_need_resubmit}" rendered="#{takeable.assessmentUpdatedNeedResubmit}" styleClass="validate" />
                        <h:outputText value="#{selectIndexMessages.assessment_updated}" rendered="#{takeable.assessmentUpdated}" styleClass="validate" />
                    </t:column>

                    <t:column headerstyleClass="assessmentTimeLimitHeader">
                        <f:facet name="header">
                            <h:panelGroup>
                                <a href="#" tabindex="-1">
                                    <h:outputText value="#{selectIndexMessages.t_time_limit}" />
                                </a>
                            </h:panelGroup>
                        </f:facet>

                        <h:outputText value="#{takeable.timeLimit_hour} #{selectIndexMessages.hour} #{takeable.timeLimit_minute} #{selectIndexMessages.minutes}"
                            styleClass="currentSort"
                            rendered="#{takeable.timeLimit_hour ne 0 and takeable.timeLimit_minute ne 0}"
                            escape="false" />
                        <h:outputText value="#{takeable.timeLimit_hour} #{selectIndexMessages.hour}"
                            styleClass="currentSort"
                            rendered="#{takeable.timeLimit_hour ne 0 and takeable.timeLimit_minute eq 0}"
                            escape="false" />
                        <h:outputText value="#{takeable.timeLimit_minute} #{selectIndexMessages.minutes}"
                            styleClass="currentSort"
                            rendered="#{takeable.timeLimit_hour eq 0 and takeable.timeLimit_minute ne 0}"
                            escape="false" />
                        <h:outputText value="#{selectIndexMessages.na}"
                            styleClass="currentSort"
                            rendered="#{takeable.timeLimit_hour eq 0 and takeable.timeLimit_minute eq 0}"
                            escape="false" />
                    </t:column>

                    <t:column headerstyleClass="assessmentDueDateHeader">
                        <f:facet name="header">
                            <h:panelGroup>
                                <a href="#" tabindex="-1">
                                    <h:outputText value="#{selectIndexMessages.date_due}" />
                                </a>
                            </h:panelGroup>
                        </f:facet>
                        <h:outputText value="#{selectIndexMessages.na}" rendered="#{takeable.dueDate == null}" />
                        <h:outputText value="#{takeable.dueDate}" styleClass="text-danger"
                            rendered="#{takeable.pastDue}">
                            <f:convertDateTime dateStyle="medium" timeStyle="short" timeZone="#{author.userTimeZone}" />
                        </h:outputText>
                        <h:outputText value=" #{selectIndexMessages.late} " styleClass="text-danger"
                            rendered="#{takeable.pastDue}" />
                        <h:outputText value="#{takeable.dueDate}" rendered="#{not takeable.pastDue}">
                            <f:convertDateTime dateStyle="medium" timeStyle="short" timeZone="#{author.userTimeZone}" />
                        </h:outputText>
                        <h:outputText value="#{takeable.dueDate}" styleClass="d-none spanValue">
                            <f:convertDateTime pattern="yyyyMMddHHmmss" />
                        </h:outputText>
                    </t:column>
                </t:dataTable>
            </div>

            <div class="clearfix"></div>

            <h2>
                <h:outputText value="#{selectIndexMessages.submitted_assessments}" />
            </h2>
            <div class="info-text">
                <h:outputText rendered="#{select.isThereAssessmentToReview eq 'true'}" value="#{selectIndexMessages.review_assessment_notes}" />
                <h:outputText rendered="#{select.isThereAssessmentToReview ne 'true'}" value="#{selectIndexMessages.review_assessment_notAvailable}" />
            </div>

            <t:div rendered="#{select.isThereAssessmentToReview eq 'true'}" styleClass="panel panel-default sam-submittedPanel">
                <t:div rendered="#{select.displayAllAssessments == 2}" styleClass="panel-heading sam-reviewHeaderTabs">
                    <span>
                        <h:outputText value="#{selectIndexMessages.review_assessment_all}" rendered="#{select.displayAllAssessments == 2}" />
                    </span>
                    <h:commandLink id="some"
                        value="#{selectIndexMessages.review_assessment_recorded}"
                        rendered="#{select.displayAllAssessments == 2}"
                        styleClass="sam-leftSep">
                        <f:param name="selectSubmissions" value="1" />
                        <f:actionListener type="org.sakaiproject.tool.assessment.ui.listener.select.SelectActionListener" />
                    </h:commandLink>
                </t:div>

                <t:div rendered="#{select.displayAllAssessments == 1}" styleClass="panel-heading sam-reviewHeaderTabs">
                    <h:commandLink id="all"
                        value="#{selectIndexMessages.review_assessment_all}"
                        rendered="#{select.displayAllAssessments == 1}">
                        <f:param name="selectSubmissions" value="2" />
                        <f:actionListener type="org.sakaiproject.tool.assessment.ui.listener.select.SelectActionListener" />
                    </h:commandLink>
                    <span class="sam-leftSep">
                        <h:outputText value="#{selectIndexMessages.review_assessment_recorded}" rendered="#{select.displayAllAssessments == 1}" />
                    </span>
                </t:div>

                <ui:include src="selectIndex_review_table.xhtml" />
            </t:div>
        </h:form>
    </div>

</ui:composition>
