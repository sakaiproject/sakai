<?xml version="1.0" encoding="UTF-8"?>
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
    xmlns:f="http://xmlns.jcp.org/jsf/core"
    xmlns:h="http://xmlns.jcp.org/jsf/html"
    xmlns:samigo="http://www.sakaiproject.org/samigo"
    xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
    xmlns:sakai="http://sakaiproject.org/jsf2/sakai"
    xmlns:corejsf="http://java.sun.com/upload">

    <f:view>
        <f:event type="preRenderView" listener="#{portalHeaderConfigurator.configure}" />
        <h:head>
            <ui:fragment rendered="#{not empty requestScope['html.head']}">
                <h:outputText value="#{requestScope['html.head']}" escape="false" />
            </ui:fragment>
            <title>
                <h:outputText value="#{authorMessages.item_display_author}" />
            </title>
            <script type="text/javascript" src="/library/webjars/jquery/1.12.4/jquery.min.js"></script>
            <script type="text/javascript" src="/samigo-app/js/jquery.dynamiclist.author.js"></script>
            <script type="text/javascript" src="/samigo-app/js/selection.author.js"></script>
            <link rel="stylesheet" type="text/css" href="/samigo-app/css/imageQuestion.author.css" />
            <script type="text/javascript" src="/samigo-app/js/authoring.js"></script>
            <h:outputScript target="head">
                //<![CDATA[
                const dynamicList = new DynamicList('itemForm\\:serialized', 'template', { selectionClass: 'selectiondiv', textClass: 'textContainer' }, 'imageContainer');

                window.addEventListener('load', () => {
                    const serialized = document.getElementById('itemForm:serialized');
                    const defaultDescription = document.getElementById('defaultDescriptionTemplate').value;

                    if (serialized && serialized.value !== '') {
                        dynamicList.fillElements();
                    } else {
                        dynamicList.addElement(defaultDescription, true, true);
                    }

                    const addButton = document.getElementById('addNewElement');
                    if (addButton) {
                        addButton.addEventListener('click', () => {
                            dynamicList.addElement(defaultDescription, true, true);
                        }, false);
                    }
                });

                function resetList() {
                    dynamicList.resetElements();
                    dynamicList.serializeElements();
                }

                function validate() {
                    if (validateDescriptions()) {
                        return validateZones();
                    }
                    return false;
                }

                function validateDescriptions() {
                    let ok = true;
                    jQuery('input[id^=value_]').each(function () {
                        if (!jQuery.trim(this.value).length) {
                            ok = false;
                            return false;
                        }
                    });

                    if (!ok) {
                        alert("#{authorMessages.all_im_descriptions_needed}");
                    }
                    return ok;
                }

                function validateZones() {
                    const val = dynamicList.validateElements();
                    if (val === 0) {
                        alert("#{authorMessages.all_im_zones_needed}");
                        return false;
                    }
                    dynamicList.serializeElements();
                    return true;
                }
                //]]>
            </h:outputScript>
        </h:head>
        <h:body onload="#{empty requestScope['html.body.onload'] ? '' : requestScope['html.body.onload']}">
            <div class="portletBody container-fluid">

<!-- content... -->
<!-- FORM -->

<!-- HEADING -->
<ui:include src="/jsf/author/item/itemHeadings.xhtml" />

<h:form id="itemForm" enctype="multipart/form-data">
<ui:fragment>
    <input type="hidden" id="ckeditor-autosave-context" name="ckeditor-autosave-context" value="samigo_edit_imageMapQuestion" />
    <input type="hidden" id="defaultDescriptionTemplate" value="#{authorMessages.im_description}" />
</ui:fragment>
<ui:fragment rendered="#{itemauthor.currentItem.itemId != null}">
    <input type="hidden" id="ckeditor-autosave-entity-id" name="ckeditor-autosave-entity-id" value="#{itemauthor.currentItem.itemId}" />
</ui:fragment>
<p class="act">
  <h:commandButton rendered="#{itemauthor.target=='assessment'}" value="#{commonMessages.action_save}" action="#{itemauthor.currentItem.getOutcome}" styleClass="active" onclick="return validateZones()">
        <f:actionListener
           type="org.sakaiproject.tool.assessment.ui.listener.author.ItemAddListener" />
  </h:commandButton>
  <h:commandButton rendered="#{itemauthor.target=='questionpool'}" value="#{commonMessages.action_save}" action="#{itemauthor.currentItem.getPoolOutcome}" styleClass="active" onclick="return validateZones()">
        <f:actionListener
           type="org.sakaiproject.tool.assessment.ui.listener.author.ItemAddListener" />
  </h:commandButton>

  <h:commandButton rendered="#{itemauthor.target=='assessment'}" value="#{commonMessages.cancel_action}" action="editAssessment" immediate="true">
        <f:actionListener
           type="org.sakaiproject.tool.assessment.ui.listener.author.ResetItemAttachmentListener" />
        <f:actionListener
           type="org.sakaiproject.tool.assessment.ui.listener.author.EditAssessmentListener" />
  </h:commandButton>

 <h:commandButton rendered="#{itemauthor.target=='questionpool'}" value="#{commonMessages.cancel_action}" action="editPool" immediate="true">
        <f:actionListener
           type="org.sakaiproject.tool.assessment.ui.listener.author.ResetItemAttachmentListener" />
 </h:commandButton>
</p>

  <!-- QUESTION PROPERTIES -->
  <!-- this is for creating multiple choice questions -->
  <!-- kludge: we add in 1 useless textarea, the 1st does not seem to work -->
  <div style="display:none">
  <h:inputTextarea id="ed0" cols="10" rows="10" value="            " />
  </div>


    <!-- 1 POINTS -->
    <div class="form-group row">
        <h:outputLabel for="answerptr" value="#{authorMessages.answer_point_value}" styleClass="col-md-2 form-label"/>
        <div class="col-md-2">
            <h:inputText id="answerptr" label="#{authorMessages.pt}" value="#{itemauthor.currentItem.itemScore}" 
                required="true" disabled="#{author.isEditPoolFlow}" styleClass="ConvertPoint form-control">
                <f:validateDoubleRange minimum="0.00"/>
            </h:inputText>
            <h:message for="answerptr" styleClass="validate"/>
        </div>
    </div>
    
    <div class="form-group row">
        <h:outputLabel for="itemScore" value="#{authorMessages.answer_point_value_display}" styleClass="col-md-2 form-label"/>
        <div class="col-md-5 samigo-inline-radio">
            <h:selectOneRadio value="#{itemauthor.currentItem.itemScoreDisplayFlag}" id="itemScore">
                <f:selectItem itemValue="true" itemLabel="#{authorMessages.yes}" />
                <f:selectItem itemValue="false" itemLabel="#{authorMessages.no}" />
            </h:selectOneRadio>
        </div>
    </div>    

    <!-- Extra Credit -->
    <ui:include src="/jsf/author/inc/extraCreditSetting.xhtml" />

    <!-- 2 TEXT -->
    <div class="form-group row">
        <h:outputLabel for="questionItemText_textinput" value="#{authorMessages.q_text_image_map}" styleClass="form-label"/> 
        <!-- WYSIWYG -->
        <div class="col-md-12">
            <h:panelGrid>
                <samigo:wysiwyg identity="questionItemText" rows="140" value="#{itemauthor.currentItem.instruction}" hasToggle="yes">
                    <f:validateLength maximum="60000"/>
                </samigo:wysiwyg>
            </h:panelGrid>
        </div>
    </div>

    <!-- 2a ATTACHMENTS -->
    <ui:include src="/jsf/author/item/attachment.xhtml" />
  
    <hr class="itemSeparator" />
    <br />
  
    <!-- IMAGE SRC -->
    <div class="form-group row"> 
        <h:outputLabel for="upl" value="#{authorMessages.image_map_src}" styleClass="col-md-2 form-label"/>
        <div class="col-md-10">
            <corejsf:upload
                target="jsf/upload_tmp/assessment#{assessmentBean.assessmentId}/question#{itemauthor.currentItem.itemId}/#{person.eid}"
                valueChangeListener="#{itemauthor.addImageToQuestion}" />
            <h:commandButton id="upl" action="imageMapItem" value="#{deliveryMessages.upload}" onclick='resetList()'/>
        </div>
        <h:outputLabel value="#{authorMessages.image_map_alt}" styleClass="col-md-2 form-label"/>
         <div class="col-md-10">
             <h:inputText id="imageMapAltText" value="#{itemauthor.currentItem.imageMapAltText}" styleClass="form-control" maxlength="254"/>
         </div>
    </div>
  
    <!-- 3 ANSWER -->
    <div class="longtext"> 
        <h:outputLabel value="#{authorMessages.create_IM_pairing} " />
    </div>
    <h:inputHidden id="serialized" value="#{itemauthor.currentItem.serializedImageMap}" /> 

    <div>
        <input type='button' id='addNewElement' value="+" style="margin-left: 45px" />
        <div id='template' style='display:none'>	
            <span name='position_'></span>
            <span>
                <div id='btnSelect_'></div>
            </span>
            <span>
                <input type='text' name='value_' style='width : 200px'/>
            </span>
            <span>
                <input type='button' name='btnRemove_' onclick="dynamicList.removeElement(this)" value="-" />
            </span>
        </div>
        <h:outputLabel value="#{authorMessages.im_add_item} " />
    </div> <br />
  
 
    <div onmousedown="return false" id="imageContainer" class='authorImageContainer'>
        <h:graphicImage id="img" value="#{itemauthor.currentItem.imageMapSrc}" alt="#{itemauthor.currentItem.imageMapAltText}" />
    </div>

    <!-- Match FEEDBACK -->
    <br/>
    <!-- REQUIRE ALL OK -->
    <div class="form-group row">   
        <h:outputLabel for="questionRequireAllOk" value="#{authorMessages.require_all_ok}" styleClass="col-md-2 form-label"/>
        <div class="col-md-10 samigo-inline-radio">
            <h:selectOneRadio value="#{itemauthor.currentItem.requireAllOk}" id="questionRequireAllOk">
                <f:selectItem itemValue="false" itemLabel="#{authorMessages.yes}" />
                <f:selectItem itemValue="true" itemLabel="#{authorMessages.no}" />
            </h:selectOneRadio>
        </div>
    </div>

    <hr class="itemSeparator" />

    <!-- 5a TIMED -->
    <ui:include src="/jsf/author/item/timed.xhtml" />

    <!-- 6 PART -->
    <h:panelGroup rendered="#{itemauthor.target == 'assessment' and not author.isEditPoolFlow}" layout="block" styleClass="form-group row">
        <h:outputLabel for="assignToPart" value="#{authorMessages.assign_to_p}" styleClass="col-md-2 form-label"/>
        <div class="col-md-10">
            <h:selectOneMenu id="assignToPart" value="#{itemauthor.currentItem.selectedSection}">
                <f:selectItems  value="#{itemauthor.sectionSelectList}" />
            </h:selectOneMenu>
        </div>
    </h:panelGroup>

    <!-- 7 POOL -->
    <h:panelGroup rendered="#{itemauthor.target == 'assessment' and author.isEditPendingAssessmentFlow}" layout="block" styleClass="form-group row">
        <h:outputLabel for="assignToPool" value="#{authorMessages.assign_to_question_p}" styleClass="col-md-2 form-label"/>
        <!-- stub debug -->
        <div class="col-md-10">
            <h:selectOneMenu id="assignToPool" value="#{itemauthor.currentItem.selectedPool}">
                <f:selectItem itemValue="" itemLabel="#{authorMessages.select_a_pool_name}" />
                <f:selectItems value="#{itemauthor.poolSelectList}" />
            </h:selectOneMenu>
        </div>
    </h:panelGroup>

    <!-- 8 FEEDBACK -->
    <h:panelGroup  layout="block" rendered="#{itemauthor.target == 'questionpool' or (itemauthor.target != 'questionpool' and ((author.isEditPendingAssessmentFlow and assessmentSettings.feedbackAuthoring ne '2') or (!author.isEditPendingAssessmentFlow and publishedSettings.feedbackAuthoring ne '2')))}">
        <h2>
            <h:outputText value="#{authorMessages.correct_incorrect_an}" />
        </h2>
        <div class="form-group row">
            <h:outputLabel for="questionFeedbackCorrect_textinput" value="#{authorMessages.correct_answer_opti}" styleClass="form-label"/>
            <div class="col-md-10">
                <h:panelGrid>
                    <samigo:wysiwyg identity="questionFeedbackCorrect" rows="140" value="#{itemauthor.currentItem.corrFeedback}" hasToggle="yes" >
                        <f:validateLength maximum="60000"/>
                    </samigo:wysiwyg>
                </h:panelGrid>
            </div>
        </div>
        <div class="form-group row">
            <h:outputLabel for="questionFeedbackIncorrect_textinput" value="#{authorMessages.incorrect_answer_op}" styleClass="form-label"/>
            <div class="col-md-10">
                <h:panelGrid>
                    <samigo:wysiwyg identity="questionFeedbackIncorrect" rows="140" value="#{itemauthor.currentItem.incorrFeedback}" hasToggle="yes" >
                        <f:validateLength maximum="60000"/>
                    </samigo:wysiwyg>
                </h:panelGrid>
            </div>
        </div>
    </h:panelGroup>


    <!-- METADATA -->
    <h:panelGroup rendered="#{itemauthor.showMetadata == 'true'}" styleClass="longtext" layout="block">
        <h:outputLabel value="Metadata"/>
        <div class="form-group row">
            <h:outputLabel for="obj" value="#{authorMessages.objective}" styleClass="col-md-2 form-label"/>
            <div class="col-md-6">
                <h:inputText size="30" id="obj" value="#{itemauthor.currentItem.objective}"  styleClass="form-control"/>
            </div>
        </div>
        <div class="form-group row">
            <h:outputLabel for="keyword" value="#{authorMessages.keyword}" styleClass="col-md-2 form-label"/>
            <div class="col-md-6">
                <h:inputText size="30" id="keyword" value="#{itemauthor.currentItem.keyword}"  styleClass="form-control"/>
            </div>
        </div>
        <div class="form-group row">
            <h:outputLabel for="rubric" value="#{authorMessages.rubric_colon}" styleClass="col-md-2 form-label"/>
            <div class="col-md-6">
                <h:inputText size="30" id="rubric" value="#{itemauthor.currentItem.rubric}" styleClass="form-control"/>
            </div>
        </div>
    </h:panelGroup>

    <ui:include src="/jsf/author/item/tags.xhtml" />


<p class="act">
  <h:commandButton rendered="#{itemauthor.target=='assessment'}" value="#{commonMessages.action_save}" action="#{itemauthor.currentItem.getOutcome}" styleClass="active" onclick="return validate()">
        <f:actionListener
           type="org.sakaiproject.tool.assessment.ui.listener.author.ItemAddListener" />
  </h:commandButton>
  <h:commandButton rendered="#{itemauthor.target=='questionpool'}" value="#{commonMessages.action_save}" action="#{itemauthor.currentItem.getPoolOutcome}" styleClass="active" onclick="return validate()">
        <f:actionListener
           type="org.sakaiproject.tool.assessment.ui.listener.author.ItemAddListener" />
  </h:commandButton>

  <h:commandButton rendered="#{itemauthor.target=='assessment'}" value="#{commonMessages.cancel_action}" action="editAssessment" immediate="true">
        <f:actionListener
           type="org.sakaiproject.tool.assessment.ui.listener.author.ResetItemAttachmentListener" />
        <f:actionListener
           type="org.sakaiproject.tool.assessment.ui.listener.author.EditAssessmentListener" />
  </h:commandButton>

 <h:commandButton rendered="#{itemauthor.target=='questionpool'}" value="#{commonMessages.cancel_action}" action="editPool" immediate="true">
        <f:actionListener
           type="org.sakaiproject.tool.assessment.ui.listener.author.ResetItemAttachmentListener" />
 </h:commandButton>

</p>
</h:form>
<!-- end content -->
            </div>
        </h:body>
    </f:view>
</ui:composition>
