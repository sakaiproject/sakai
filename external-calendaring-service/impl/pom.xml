<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	
    <parent>
        <artifactId>external-calendaring-service</artifactId>
        <groupId>org.sakaiproject.calendaring</groupId>
        <version>12-SNAPSHOT</version>
    </parent>
    
	<name>External Calendaring Service :: Implementation</name>
	<groupId>org.sakaiproject.calendaring</groupId>
	<artifactId>external-calendaring-service-impl</artifactId>
	<packaging>sakai-component</packaging>
    <properties>
        <deploy.target>components</deploy.target>
    </properties>

	
  	<dependencies>
    	<dependency>
			<groupId>org.sakaiproject.calendaring</groupId>
		<artifactId>external-calendaring-service-api</artifactId>
		</dependency>
        <dependency>
            <groupId>org.sakaiproject.kernel</groupId>
            <artifactId>sakai-kernel-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.sakaiproject.kernel</groupId>
            <artifactId>sakai-component-manager</artifactId>
        </dependency>
        <dependency>
            <groupId>org.sakaiproject.kernel</groupId>
            <artifactId>sakai-kernel-util</artifactId>
        </dependency>
        <dependency>
            <groupId>org.sakaiproject.calendar</groupId>
            <artifactId>sakai-calendar-api</artifactId>
        </dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
		</dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>        
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
        </dependency>
        <dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
		</dependency>
		<dependency>
      		<groupId>org.mnode.ical4j</groupId>
      		<artifactId>ical4j</artifactId>
    	</dependency>

        <!--  test dependencies -->
    	<dependency>
    		<groupId>org.springframework</groupId>
    		<artifactId>spring-test</artifactId>
    	</dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>

    </dependencies>
	<build>
		<resources>
            <resource>
                <directory>${basedir}/src/resources</directory>
                <includes>
                    <include>**/*.properties</include>
                </includes>
            </resource>
        </resources>
        
        <!-- unit testing -->
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <!-- 
                    By default, the surefire plugin will automatically include all test classes with the following wildcard patterns:
                    "**/Test*.java" - includes all of its subdirectory and all java filenames that start with "Test".
                    "**/*Test.java" - includes all of its subdirectory and all java filenames that end with "Test".
                    "**/*TestCase.java" - includes all of its subdirectory and all java filenames that end with "TestCase".
                -->
            </plugin>
        </plugins>
        <testResources>
            <testResource>
                <directory>${basedir}/src/test</directory>
                <includes>
                    <include>test-components.xml</include>
                    <include>log4j.properties</include>
                </includes>
            </testResource>
        </testResources>
        
	</build>
</project>
