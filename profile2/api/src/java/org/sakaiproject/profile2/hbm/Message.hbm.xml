<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping package="org.sakaiproject.profile2.model">

	<class name="Message" table="PROFILE_MESSAGES_T">
	    
	    <id name="id" column="ID" length="36">
	    	<generator class="assigned" />
	    </id>

	    <property name="from" column="FROM_UUID" length="99" not-null="true" index="PROFILE_M_FROM_UUID_I" />
		<property name="message" column="MESSAGE_BODY" type="string" length="4000" not-null="true"/>
		<property name="thread" column="MESSAGE_THREAD" length="36" not-null="true" index="PROFILE_M_THREAD_I" />
		<property name="datePosted" column="DATE_POSTED" not-null="true" type="timestamp" index="PROFILE_M_DATE_POSTED_I" />

  	</class>
  	
  
	<!-- get a count of all unread messages for a given user -->
	<query name="getAllUnreadMessagesCount">
    	<![CDATA[select count(message.id) from Message as message, MessageParticipant as participant where participant.uuid = :uuid and participant.read=:false and participant.deleted=:false and participant.messageId=message.id]]>
	</query>
	
	<!-- get a count of all threads that have unread messages for a given user -->
	<query name="getThreadsWithUnreadMessagesCount">
    	<![CDATA[select count(distinct message.thread) from Message as message, MessageParticipant as participant where participant.uuid = :uuid and participant.read=:false and participant.deleted=:false and participant.messageId=message.id]]>
	</query>
	
	<!-- get all messages in a thread, default sort -->
	<query name="getMessagesInThread">
    	<![CDATA[from Message as message where message.thread = :thread order by message.datePosted asc]]>
	</query>
	
	<!-- get a count of all messages in a thread -->
	<query name="getMessagesInThreadCount">
    	<![CDATA[select count(distinct message.id) from Message as message where message.thread = :thread]]>
	</query>
	
	<!-- get a count of all messages sent by a given user -->
	<query name="getSentMessagesCount">
    	<![CDATA[select count(distinct message.id) from Message as message where message.from = :uuid]]>
	</query>
	
	<!-- get a single message -->
	<query name="getMessage">
    	<![CDATA[from Message as message where message.id = :id]]>
	</query>
	
	<!-- get the latest message in a thread -->
	<query name="getLatestMessageInThread">
    	<![CDATA[from Message as message where message.thread = :thread order by message.datePosted desc]]>
	</query>
	
	<!-- gets all threads that a user has had messages sent to them in. afterwards, must be expanded to get latest message object, and then sorted. -->
	<sql-query name="getMessageThreads">
    	<return alias="thread" class="MessageThread">
    		<return-property name="id" column="threadId"/>
    		<return-property name="subject" column="threadSubject"/>
    	</return>
    	<![CDATA[
    	SELECT distinct(thread.ID) as threadId, thread.SUBJECT as threadSubject from PROFILE_MESSAGE_PARTICIPANTS_T participant, PROFILE_MESSAGES_T message, PROFILE_MESSAGE_THREADS_T thread where participant.PARTICIPANT_UUID = :uuid and participant.MESSAGE_ID=message.ID and message.MESSAGE_THREAD=thread.ID and participant.PARTICIPANT_UUID != message.FROM_UUID
		]]>
	</sql-query>
	
	<!-- get a count of all threads that a user has had messages sent to them in (ie all particiapnt records except if that user sent them) -->
	<query name="getMessageThreadsCount">
    	<![CDATA[select count(distinct message.thread) from Message as message, MessageParticipant as participant where participant.uuid = :uuid and participant.messageId=message.id and participant.uuid != message.from]]>
	</query>
	
</hibernate-mapping>
