<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!--  SakaiProxy -->
 	<bean id="org.sakaiproject.profile2.logic.SakaiProxy"
        class="org.sakaiproject.profile2.logic.SakaiProxyImpl">
        <!-- API injection -->
        <property name="securityService" ref="org.sakaiproject.authz.api.SecurityService" />
        <property name="sessionManager" ref="org.sakaiproject.tool.api.SessionManager" />
        <property name="siteService" ref="org.sakaiproject.site.api.SiteService" />
        <property name="toolManager" ref="org.sakaiproject.tool.api.ToolManager" />
        <property name="userDirectoryService" ref="org.sakaiproject.user.api.UserDirectoryService" />
        <property name="sakaiPersonManager" ref="org.sakaiproject.api.common.edu.person.SakaiPersonManager" />
		<property name="contentHostingService" ref="org.sakaiproject.content.api.ContentHostingService" />
		<property name="eventTrackingService" ref="org.sakaiproject.event.api.EventTrackingService" />
		<property name="serverConfigurationService" ref="org.sakaiproject.component.api.ServerConfigurationService" />
		<property name="idManager" ref="org.sakaiproject.id.api.IdManager" />
		<property name="activityService" ref="org.sakaiproject.event.api.ActivityService" />
	</bean>
	
	<!-- setup a DAO, accessed via the transaction proxy -->
	<bean id="org.sakaiproject.profile2.dao.ProfileDaoTarget"
    	class="org.sakaiproject.profile2.dao.impl.ProfileDaoImpl">
		<property name="sessionFactory" ref="org.sakaiproject.springframework.orm.hibernate.GlobalSessionFactory" />
	</bean>
        
	<!--  register the DAO as a transactional interceptor. Use the classloader proxy from gendao because this is a protected DAO
-->
	<bean id="org.sakaiproject.profile2.dao.ProfileDao"
		class="org.sakaiproject.genericdao.springutil.CurrentClassLoaderTxProxyFactoryBean">		
		<property name="transactionManager" ref="org.sakaiproject.springframework.orm.hibernate.GlobalTransactionManager" />
		<property name="target" ref="org.sakaiproject.profile2.dao.ProfileDaoTarget" />
		<property name="transactionAttributes">
			<props>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>	
	
	<!-- ProfileLogic -->
	<bean id="org.sakaiproject.profile2.logic.ProfileLogic"
    	class="org.sakaiproject.profile2.logic.ProfileLogicImpl"
    	init-method="init">
    	<property name="dao" ref="org.sakaiproject.profile2.dao.ProfileDao" />
    	<property name="sakaiProxy" ref="org.sakaiproject.profile2.logic.SakaiProxy" />
    	<property name="preferencesLogic" ref="org.sakaiproject.profile2.logic.ProfilePreferencesLogic" />
    	<property name="imageLogic" ref="org.sakaiproject.profile2.logic.ProfileImageLogic" />
    	<property name="linkLogic" ref="org.sakaiproject.profile2.logic.ProfileLinkLogic" />
	</bean>
	
	<!-- ProfileLinkLogic -->
	<bean id="org.sakaiproject.profile2.logic.ProfileLinkLogic"
    	class="org.sakaiproject.profile2.logic.ProfileLinkLogicImpl">
    	<property name="sakaiProxy" ref="org.sakaiproject.profile2.logic.SakaiProxy" />
    </bean>
    
    <!-- ProfilePreferencesLogic -->
	<bean id="org.sakaiproject.profile2.logic.ProfilePreferencesLogic"
    	class="org.sakaiproject.profile2.logic.ProfilePreferencesLogicImpl">
    	<property name="dao" ref="org.sakaiproject.profile2.dao.ProfileDao" />
    	<property name="sakaiProxy" ref="org.sakaiproject.profile2.logic.SakaiProxy" />
    </bean>
    
    <!-- ProfileImageLogic -->
    <bean id="org.sakaiproject.profile2.logic.ProfileImageLogic"
    	class="org.sakaiproject.profile2.logic.ProfileImageLogicImpl"
    	init-method="init">
    	<property name="dao" ref="org.sakaiproject.profile2.dao.ProfileDao" />
    	<property name="sakaiProxy" ref="org.sakaiproject.profile2.logic.SakaiProxy" />
    	<property name="preferencesLogic" ref="org.sakaiproject.profile2.logic.ProfilePreferencesLogic" />
    	<property name="cacheManager" ref="org.sakaiproject.profile2.cache.CacheManager" />
    	<property name="profileLogic" ref="org.sakaiproject.profile2.logic.ProfileLogic" />
    </bean>
    
    <!-- ProfileExternalIntegrationLogic -->
    <bean id="org.sakaiproject.profile2.logic.ProfileExternalIntegrationLogic"
    	class="org.sakaiproject.profile2.logic.ProfileExternalIntegrationLogicImpl">
    	<property name="dao" ref="org.sakaiproject.profile2.dao.ProfileDao" />
    	<property name="sakaiProxy" ref="org.sakaiproject.profile2.logic.SakaiProxy" />
    </bean>
    
    <!-- CacheManager -->
    <bean id="org.sakaiproject.profile2.cache.CacheManager"
    	class="org.sakaiproject.profile2.cache.CacheManagerImpl">
    	<property name="memoryService" ref="org.sakaiproject.memory.api.MemoryService" />
    </bean>

	<!-- Add our HBM files to the Sakai global session factory -->
	<bean id="org.sakaiproject.profile2.hbm.HBMMappingList"
    	class="org.sakaiproject.springframework.orm.hibernate.impl.AdditionalHibernateMappingsImpl">

	    <property name="mappingResources">
	      <list>
	        <value>org/sakaiproject/profile2/hbm/ExternalIntegrationInfo.hbm.xml</value>
	       	<value>org/sakaiproject/profile2/hbm/ProfileImageExternal.hbm.xml</value>
	        <value>org/sakaiproject/profile2/hbm/ProfileImageOfficial.hbm.xml</value>
	       	<value>org/sakaiproject/profile2/hbm/ProfileImageUploaded.hbm.xml</value>
	       	<value>org/sakaiproject/profile2/hbm/ProfilePreferences.hbm.xml</value>
	       	<value>org/sakaiproject/profile2/hbm/SakaiPersonMeta.hbm.xml</value>
	        <value>org/sakaiproject/profile2/hbm/SocialNetworkingInfo.hbm.xml</value>
	      </list>
	    </property>

  	</bean>
  	
    <!-- ProfileService facade (supports clients of pre 1.4 Profile2 API. See https://jira.sakaiproject.org/browse/PRFL-551
-->
	<bean id="org.sakaiproject.profile2.service.ProfileService"
		class="org.sakaiproject.profile2.service.ProfileServiceImpl"
		init-method="init">
    	<property name="entityManager" ref="org.sakaiproject.entity.api.EntityManager" />
	</bean>
	
	<bean id="org.sakaiproject.profile2.service.ProfileImageService"
				class="org.sakaiproject.profile2.service.ProfileImageServiceImpl">
		<property name="dao" ref="org.sakaiproject.profile2.dao.ProfileDao" />
		<property name="sessionManager" ref="org.sakaiproject.tool.api.SessionManager" />
	</bean>

	<bean id="org.sakaiproject.profile2.logic.ProfileContentProducer"
		class="org.sakaiproject.profile2.logic.ProfileContentProducer" init-method="init">
		<property name="sakaiPersonManager" ref="org.sakaiproject.api.common.edu.person.SakaiPersonManager"/>
		<property name="searchIndexBuilder" ref="org.sakaiproject.search.api.SearchIndexBuilder" />
		<property name="serverConfigurationService" ref="org.sakaiproject.component.api.ServerConfigurationService" />
		<property name="userDirectoryService" ref="org.sakaiproject.user.api.UserDirectoryService" />
	</bean>

</beans>
