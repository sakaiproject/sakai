# this defines the entity description for session
session=Represents a user or system session which is currently active, inactive sessions or information about inactive sessions cannot be accessed, the session is effectively immutable and removing it is the same as deactivating it, updating simply has the effect of refreshing it so it will not timeout
session.view.new=Create a new session via authentication using the '_username' and '_password' params set to the username and password of the user to create the session for, as per the REST conventions, the id of the session will be sent back in the response headers, NOTE\: admins may create sessions for any user by just sending a request with valid session data
session.Deleteable=La suppression d'une session la rend imm\u00e9diatement inactive et inaccessible (comme appeler Session.invalidate())
session.Updateable=La mise \u00e0 jour d'une session r\u00e9initialise le d\u00e9lai d'attente (comme appeler Session.setActive())
session.Resolvable=L'acc\u00e8s \u00e0 une session le rafra\u00eechira \u00e0 moins que vous ne passiez le long d'une param appel\u00e9e auto (la valeur de la param n'a aucune importance), cela vous permettra d'obtenir les informations sur une session sans la mettre \u00e0 jour
session.Createable=Pour lancer une nouvelle session, lancer une requ\u00eate de cr\u00e9ation avec un param\u00e8tre '_username' et '_password' d\u00e9fini sur le nom d'utilisateur et le mot de passe de l'utilisateur pour cr\u00e9er la session, REMARQUE \: les administrateurs peuvent cr\u00e9er des sessions pour n'importe quel utilisateur en envoyant simplement une requ\u00eate avec une entit\u00e9 de session valide
session.redirect./{prefix}/{id}/norefresh=Permet une URL sympa pour obtenir une session sans mettre \u00e0 jour
session.redirect./{prefix}/current/norefresh=URL facile pour obtenir la session courante sans provoquer de rafra\u00eechissement
session.action.current=R\u00e9cup\u00e8re la session courante pour la requ\u00eate courante
session.action.becomeuser=Permet \u00e0 l'utilisateur de devenir un autre utilisateur en supposant que l'utilisateur demandeur est un administrateur Sakai. Syntaxe \: serverUrl/direct/session/becomeuser/\:USERID\: , o\u00f9 \:USERID\: est soit un userId soit un userEid
session.field.creationTime=le temps en milliseconde du moment o\u00f9 la session a \u00e9t\u00e9 cr\u00e9\u00e9e
session.field.lastAccessedTime=le temps en milliseconde de la derni\u00e8re mise \u00e0 jour de la session
session.field.maxInactiveInterval=secondes max la session peut \u00eatre inactive avant l'invalidation automatique
session.field.userEid=l'id externe (typiquement le nom d'utilisateur) de l'utilisateur propri\u00e9taire de cette session
