#X-Generator: crowdin.com
# this defines the entity description for user
user=Repr\u00e9sente un utilisateur dans le syst\u00e8me, les donn\u00e9es utilisateur sont effectivement immuables et la suppression des utilisateurs ne peut pas remplacer les utilisateurs externes fournis
user.view.list=Obtient une liste de tous les utilisateurs du syst\u00e8me (peut \u00eatre limit\u00e9 par la recherche, mais toujours un maximum de 50 r\u00e9sultats), cela ne fonctionne normalement que pour les utilisateurs admin, mais peut \u00eatre activ\u00e9 pour tous les utilisateurs avec le param\u00e8tre de configuration 'entity.users.viewall \= true'
user.view.show=Obtenir un seul utilisateur par eid (par d\u00e9faut) ou par id en pr\u00e9fixant avec \u00ab\u00a0id\=\u00a0\u00bb (par exemple /user/id\=ERW434YIY88)
user.view.new=Cr\u00e9e un utilisateur, eid est le seul champ requis, tous les autres sont facultatifs, l'id peut \u00e9galement \u00eatre sp\u00e9cifi\u00e9, mais un id sera g\u00e9n\u00e9r\u00e9 pour vous si vous le laissez vierge
user.Resolvable=L\u2019identificateur d\u2019utilisateur par d\u00e9faut est l\u2019eid (par exemple/user/aaronz), les recherches peuvent \u00e9galement se produire \u00e0 l\u2019aide de l\u2019id en pr\u00e9fixant avec \u00ab\u00a0id\=\u00a0\u00bb (par exemple /user/id\=ERW434YIY88)
user.action.current=Obtenir de l\u2019utilisateur courant s\u2019il y a un
user.action.exists=V\u00e9rifier si un userId existe (v\u00e9rifiera par eid et puis id sauf ' id\=userId' est utilis\u00e9), retourne 200 si existe et certains code d\u2019\u00e9chec comme 400 sinon
user.action.validatePassword=V\u00e9rifier si un mot de passe est valide pour un utilisateur, params\: 'password' (obligatoire) le mot de passe \u00e0 v\u00e9rifier, 'username' (en option) le nom d\u2019utilisateur de l\u2019utilisateur