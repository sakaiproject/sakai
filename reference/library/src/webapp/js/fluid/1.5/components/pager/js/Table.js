var fluid_1_5=fluid_1_5||{};!function($,fluid){"use strict";fluid.registerNamespace("fluid.table"),fluid.table.findColumnDef=function(columnDefs,key){return fluid.find_if(columnDefs,function(def){return def.key===key})},fluid.table.getRoots=function(target,dataOffset,index){target.shortRoot=index,target.longRoot=fluid.pathUtil.composePath(dataOffset,target.shortRoot)},fluid.table.expandPath=function(EL,shortRoot,longRoot){return"*"===EL.charAt(0)?longRoot+EL.substring(1):EL.replace("*",shortRoot)},fluid.table.fetchValue=function(dataOffset,dataModel,index,valuebinding,roots){fluid.table.getRoots(roots,dataOffset,index);var path=fluid.table.expandPath(valuebinding,roots.shortRoot,roots.longRoot);return fluid.get(dataModel,path)},fluid.table.rowComparator=function(sortDir){return function(arec,brec){return(arec.value>brec.value?1:arec.value<brec.value?-1:0)*sortDir}},fluid.table.basicSorter=function(columnDefs,dataModel,dataOffset,model){for(var roots={},columnDef=fluid.table.findColumnDef(columnDefs,model.sortKey),sortrecs=[],i=0;i<model.totalRange;++i)sortrecs[i]={index:i,value:fluid.table.fetchValue(dataOffset,dataModel,i,columnDef.valuebinding,roots)};return sortrecs.sort(fluid.table.rowComparator(model.sortDir)),fluid.getMembers(sortrecs,"index")},fluid.table.IDforColumn=function(columnDef,keyPrefix,roots){var EL=columnDef.valuebinding,key=columnDef.key;if(EL||fluid.fail("Error in definition for column with key "+key+": valuebinding is not set"),!key){var segs=fluid.model.parseEL(EL);key=segs[segs.length-1]}return{ID:(keyPrefix||"")+key,EL:fluid.table.expandPath(EL,roots.shortRoot,roots.longRoot)}},fluid.table.bigHeaderForKey=function(key,options){var id=options.rendererOptions.idMap["header:"+key],smallHeader=fluid.jById(id);if(0===smallHeader.length)return null;var headerSortStylisticOffset=options.selectors.headerSortStylisticOffset,bigHeader=fluid.findAncestor(smallHeader,function(element){return $(element).is(headerSortStylisticOffset)});return bigHeader},fluid.table.setSortHeaderClass=function(styles,element,sort){element=$(element),element.removeClass(styles.ascendingHeader),element.removeClass(styles.descendingHeader),0!==sort&&(element.addClass(1===sort?styles.ascendingHeader:styles.descendingHeader),element.attr("aria-sort",1===sort?"ascending":"descending"))},fluid.table.isCurrentColumnSortable=function(columnDefs,model){var columnDef=model.sortKey?fluid.table.findColumnDef(columnDefs,model.sortKey):null;return columnDef?columnDef.sortable:!1},fluid.table.setModelSortHeaderClass=function(columnDefs,newModel,options){var styles=options.styles,sort=fluid.table.isCurrentColumnSortable(columnDefs,newModel)?newModel.sortDir:0;fluid.table.setSortHeaderClass(styles,fluid.table.bigHeaderForKey(newModel.sortKey,options),sort)},fluid.table.generateColumnClick=function(tableThat,options,model,columnDef){return function(){if(columnDef.sortable===!0){var model=tableThat.model,newModel=fluid.copy(model),styles=tableThat.options.styles,oldKey=model.sortKey;if(columnDef.key!==model.sortKey){newModel.sortKey=columnDef.key,newModel.sortDir=1;var oldBig=fluid.table.bigHeaderForKey(oldKey,options);oldBig&&fluid.table.setSortHeaderClass(styles,oldBig,0)}else{if(newModel.sortKey!==columnDef.key)return!1;newModel.sortDir=-1*newModel.sortDir}newModel.pageIndex=0,tableThat.applier.requestChange("",newModel)}return!1}},fluid.table.fetchHeaderDecorators=function(decorators,columnDef){return decorators[columnDef.sortable?"sortableHeader":"unsortableHeader"]},fluid.table.generateHeader=function(tableThat,options,newModel){var sortableColumnTxt=options.strings.sortableColumnText;1===newModel.sortDir?sortableColumnTxt=options.strings.sortableColumnTextAsc:-1===newModel.sortDir&&(sortableColumnTxt=options.strings.sortableColumnTextDesc);var columnDefs=tableThat.options.columnDefs;return{children:fluid.transform(columnDefs,function(columnDef){return{ID:fluid.table.IDforColumn(columnDef,options.keyPrefix,{}).ID,value:columnDef.label,decorators:[{jQuery:["click",fluid.table.generateColumnClick(tableThat,options,newModel,columnDef)]},{identify:"header:"+columnDef.key},{type:"attrs",attributes:{title:columnDef.key===newModel.sortKey?sortableColumnTxt:options.strings.sortableColumnText}}].concat(fluid.table.fetchHeaderDecorators(options.decorators,columnDef))}})}},fluid.table.expandVariables=function(value,opts){for(var togo="",index=0;;){var nextindex=value.indexOf("${",index);if(-1===nextindex){togo+=value.substring(index);break}togo+=value.substring(index,nextindex);var endi=value.indexOf("}",nextindex+2),EL=value.substring(nextindex+2,endi);EL="VALUE"===EL?opts.EL:fluid.table.expandPath(EL,opts.shortRoot,opts.longRoot);var val=fluid.get(opts.dataModel,EL);togo+=val,index=endi+1}return togo},fluid.table.expandPaths=function(target,tree,opts){for(var i in tree){var val=tree[i];fluid.isMarker(val,fluid.VALUE)?"valuebinding"===i?target[i]=opts.EL:target[i]={valuebinding:opts.EL}:"valuebinding"===i?target[i]=fluid.table.expandPath(tree[i],opts):"object"==typeof val?(target[i]=void 0!==val.length?[]:{},fluid.table.expandPaths(target[i],val,opts)):"string"==typeof val?target[i]=fluid.table.expandVariables(val,opts):target[i]=tree[i]}return target},fluid.table.expandColumnDefs=function(columnDefs,keyPrefix,dataModel,filteredRow,roots){var tree=fluid.transform(columnDefs,function(columnDef){var togo,record=fluid.table.IDforColumn(columnDef,keyPrefix,roots),opts=$.extend({dataModel:dataModel},roots,record);return columnDef.components?(togo="function"==typeof columnDef.components?columnDef.components(filteredRow.row,filteredRow.index):columnDef.components,togo=fluid.table.expandPaths({},togo,opts),togo.ID=record.ID,togo):{ID:record.ID,valuebinding:record.EL}});return tree},fluid.table.fetchDataModel=function(dataModel,dataOffset){return fluid.get(dataModel,dataOffset)},fluid.table.produceTree=function(tableThat,renderThat){var options=renderThat.options,columnDefs=tableThat.options.columnDefs,roots={},tree=fluid.transform(tableThat.filtered,function(filteredRow){return fluid.table.getRoots(roots,tableThat.options.dataOffset,filteredRow.index),"explode"===columnDefs?fluid.explode(filteredRow.row,roots.longRoot):columnDefs.length?fluid.table.expandColumnDefs(columnDefs,renderThat.options.keyPrefix,tableThat.dataModel,filteredRow,roots):void 0}),fullTree={};return fullTree[options.row]=tree,"object"==typeof columnDefs&&(fullTree[options.header]=fluid.table.generateHeader(tableThat,renderThat.options,tableThat.model)),fullTree},fluid.table.sortInvoker=function(tableThat,newModel){var columnDefs=tableThat.options.columnDefs,sorted=fluid.table.isCurrentColumnSortable(columnDefs,newModel)?tableThat.options.sorter(columnDefs,tableThat.options.dataModel,tableThat.options.dataOffset,newModel):null;tableThat.permutation=sorted},fluid.table.onModelChange=function(tableThat,renderThat,newModel){renderThat.sortInvoker(newModel),tableThat.dataModel=tableThat.fetchDataModel(),tableThat.filtered=tableThat.options.modelFilter(tableThat.dataModel,newModel,tableThat.permutation)},fluid.defaults("fluid.table.selfRender",{gradeNames:["fluid.rendererRelayComponent","autoInit"],listeners:{onCreate:[{"this":"{that}.root",method:"addClass",args:"{that}.options.styles.root"}],onIndexModelChange:[{funcName:"fluid.table.onModelChange",namespace:"onModelChange",args:["{fluid.table}","{fluid.table.selfRender}","{arguments}.0","{arguments}.1"]},{func:"{that}.sortInvoker",namespace:"sortInvoker",args:"{arguments}.0"},{priority:"last",namespace:"refreshView",func:"{that}.refreshView"}],afterRender:{funcName:"fluid.table.setModelSortHeaderClass",args:["{that}.options.columnDefs","{fluid.table}.model","{that}.options"]}},modelListeners:{"{fluid.table}.model":"{that}.events.onIndexModelChange.fire({change}.value, {change}.oldValue)"},events:{onIndexModelChange:null},invokers:{sortInvoker:{funcName:"fluid.table.sortInvoker",args:["{fluid.table}","{arguments}.0"]},produceTree:{funcName:"fluid.table.produceTree",args:["{fluid.table}","{fluid.table.selfRender}"]}},selectors:{root:".flc-pager-body-template",headerSortStylisticOffset:"{table}.options.selectors.headerSortStylisticOffset",header:".flc-table-header",row:".flc-table-row"},repeatingSelectors:["header","row"],selectorsToIgnore:["root","headerSortStylisticOffset"],styles:{root:"fl-pager",ascendingHeader:"{table}.options.styles.ascendingHeader",descendingHeader:"{table}.options.styles.descendingHeader"},members:{root:"{that}.dom.root"},decorators:{sortableHeader:[],unsortableHeader:[]},keyStrategy:"id",keyPrefix:"",row:"row:",header:"header:",strings:"{table}.options.strings",columnDefs:"{table}.options.columnDefs",rendererFnOptions:{templateSource:{node:"{that}.dom.root"},renderTarget:"{that}.dom.root",noexpand:!0},rendererOptions:{model:"{table}.options.dataModel",idMap:{}}}),fluid.table.checkTotalRange=function(totalRange,pagerBar){void 0!==totalRange||pagerBar||fluid.fail("Error in Pager configuration - cannot determine total range,  since not configured in model.totalRange and no PagerBar is configured")},fluid.defaults("fluid.table",{gradeNames:["fluid.viewComponent","autoInit"],mergePolicy:{dataModel:"preserve",columnDefs:"noexpand"},components:{bodyRenderer:{type:"fluid.table.selfRender",container:"{table}.container"}},listeners:{onCreate:{funcName:"fluid.table.checkTotalRange",namespace:"checkTotalRange",args:["{that}.model.totalRange","{that}.pagerBar"]}},modelFilter:fluid.table.directModelFilter,sorter:fluid.table.basicSorter,members:{dataModel:{expander:{func:"{that}.fetchDataModel"}}},invokers:{fetchDataModel:{funcName:"fluid.table.fetchDataModel",args:["{that}.options.dataModel","{that}.options.dataOffset"]}},styles:{ascendingHeader:"fl-pager-asc",descendingHeader:"fl-pager-desc"},selectors:{headerSortStylisticOffset:".flc-pager-sort-header"},strings:{sortableColumnText:"Select to sort",sortableColumnTextDesc:"Select to sort in ascending, currently in descending order.",sortableColumnTextAsc:"Select to sort in descending, currently in ascending order."},dataOffset:"",columnDefs:[]})}(jQuery,fluid_1_5);