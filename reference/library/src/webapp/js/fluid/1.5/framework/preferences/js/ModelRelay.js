var fluid_1_5=fluid_1_5||{};!function($,fluid){"use strict";fluid.defaults("fluid.prefs.modelRelay",{gradeNames:["fluid.modelComponent","fluid.eventedComponent","autoInit"],listenerNamespaces:[],mergePolicy:{sourceApplier:"nomerge"},listeners:{onCreate:"{that}.addListeners",onDestroy:"{that}.removeListeners"},invokers:{addListeners:{funcName:"fluid.prefs.modelRelay.addListeners",args:["{that}.options.rules","{that}.applier","{that}.options.sourceApplier","{that}.options.listenerNamespaces"]},removeListeners:{funcName:"fluid.prefs.modelRelay.removeListeners",args:["{that}.options.sourceApplier.modelChanged","{that}.options.listenerNamespaces"]}},rules:{}}),fluid.prefs.modelRelay.removeListeners=function(modelChanged,namespaces){fluid.each(namespaces,function(namespace){modelChanged.removeListener(namespace)})},fluid.prefs.modelRelay.addListeners=function(rules,applier,sourceApplier,listenerNamespaces){fluid.each(rules,function(internalKey,sourceKey){var uniqueNamespace=fluid.allocateGuid();listenerNamespaces.push(uniqueNamespace),fluid.addSourceGuardedListener(applier,internalKey,sourceKey,function(newModel){fluid.fireSourcedChange(sourceApplier,sourceKey,fluid.get(newModel,internalKey),internalKey)}),fluid.addSourceGuardedListener(sourceApplier,sourceKey,internalKey,function(newModel){fluid.fireSourcedChange(applier,internalKey,fluid.get(newModel,sourceKey),sourceKey)},null,uniqueNamespace)})}}(jQuery,fluid_1_5);